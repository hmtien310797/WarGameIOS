//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Unit_ScUnitMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Unit.ScUnitMgr), typeof(System.Object));
		L.RegFunction("SetInvincible", SetInvincible);
		L.RegFunction("GetSkillAssetNames", GetSkillAssetNames);
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("GetCoef", GetCoef);
		L.RegFunction("CalCoef", CalCoef);
		L.RegFunction("Start", Start);
		L.RegFunction("Clear", Clear);
		L.RegFunction("Pause", Pause);
		L.RegFunction("GetRoot", GetRoot);
		L.RegFunction("GetSearcher", GetSearcher);
		L.RegFunction("GetUnit", GetUnit);
		L.RegFunction("CreateUnitParam", CreateUnitParam);
		L.RegFunction("GenerateUnit", GenerateUnit);
		L.RegFunction("CreateEntity", CreateEntity);
		L.RegFunction("GetGroupUnitPosition", GetGroupUnitPosition);
		L.RegFunction("GetGroupUnitPos", GetGroupUnitPos);
		L.RegFunction("CreateGroupUnit", CreateGroupUnit);
		L.RegFunction("CreateGroupUnit4RedCmd", CreateGroupUnit4RedCmd);
		L.RegFunction("CreateGroupUnit2RedCmd", CreateGroupUnit2RedCmd);
		L.RegFunction("DestroyEntity", DestroyEntity);
		L.RegFunction("GetValidUID", GetValidUID);
		L.RegFunction("EnableRootUpdate", EnableRootUpdate);
		L.RegFunction("RUpdate", RUpdate);
		L.RegFunction("RLateUpdate", RLateUpdate);
		L.RegFunction("ClearMsg", ClearMsg);
		L.RegFunction("GetBasePoint", GetBasePoint);
		L.RegFunction("GetAttackDirection", GetAttackDirection);
		L.RegFunction("GetCurrentFirePoint", GetCurrentFirePoint);
		L.RegFunction("GetCurrentMinFirePoint", GetCurrentMinFirePoint);
		L.RegFunction("GetFireLineMoveDirection", GetFireLineMoveDirection);
		L.RegFunction("GetCurrentPopulation", GetCurrentPopulation);
		L.RegFunction("IsCrossFireLine", IsCrossFireLine);
		L.RegFunction("GetFireLineDis", GetFireLineDis);
		L.RegFunction("GetTeamTagFromTeamCollect", GetTeamTagFromTeamCollect);
		L.RegFunction("StartPointFireState", StartPointFireState);
		L.RegFunction("RemovePointFireTarget", RemovePointFireTarget);
		L.RegFunction("AddPointFireTarget", AddPointFireTarget);
		L.RegFunction("ClearPointFireState", ClearPointFireState);
		L.RegFunction("IsTagedUnitDead", IsTagedUnitDead);
		L.RegFunction("New", _CreateSerclimax_Unit_ScUnitMgr);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("MaxTeam2UnitCount", get_MaxTeam2UnitCount, set_MaxTeam2UnitCount);
		L.RegVar("PlayerCreateHandle", get_PlayerCreateHandle, set_PlayerCreateHandle);
		L.RegVar("CreateHandle", get_CreateHandle, set_CreateHandle);
		L.RegVar("DeleteHandle", get_DeleteHandle, set_DeleteHandle);
		L.RegVar("PlayerCreateGroupHandle", get_PlayerCreateGroupHandle, set_PlayerCreateGroupHandle);
		L.RegVar("IgnoreFilterTeamID", get_IgnoreFilterTeamID, set_IgnoreFilterTeamID);
		L.RegVar("onUnitHurt", get_onUnitHurt, set_onUnitHurt);
		L.RegVar("onUnitArrived", get_onUnitArrived, set_onUnitArrived);
		L.RegVar("MaxSearchEnemy", get_MaxSearchEnemy, null);
		L.RegVar("CollectorMgr", get_CollectorMgr, null);
		L.RegVar("Team2Count", get_Team2Count, null);
		L.RegVar("DefenseFactor", get_DefenseFactor, null);
		L.RegVar("Filter", get_Filter, null);
		L.RegVar("BuildTableData", get_BuildTableData, null);
		L.RegVar("UnitTableData", get_UnitTableData, null);
		L.RegVar("UnitCount", get_UnitCount, null);
		L.RegVar("EnableHalfUpdate", get_EnableHalfUpdate, null);
		L.RegVar("HalfDeltaTime", get_HalfDeltaTime, null);
		L.RegVar("PointFireTargets", get_PointFireTargets, null);
		L.RegFunction("UnitArrivedCallback", Serclimax_Unit_ScUnitMgr_UnitArrivedCallback);
		L.RegFunction("UnitHurtCallback", Serclimax_Unit_ScUnitMgr_UnitHurtCallback);
		L.RegFunction("PlayerCreateGroupCallback", Serclimax_Unit_ScUnitMgr_PlayerCreateGroupCallback);
		L.RegFunction("DeleteUnitCallBack", Serclimax_Unit_ScUnitMgr_DeleteUnitCallBack);
		L.RegFunction("CreateUnitCallBack", Serclimax_Unit_ScUnitMgr_CreateUnitCallBack);
		L.RegFunction("PlayerCreateUnitCallBack", Serclimax_Unit_ScUnitMgr_PlayerCreateUnitCallBack);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Unit_ScUnitMgr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Unit.ScUnitMgr obj = new Serclimax.Unit.ScUnitMgr();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Unit.ScUnitMgr.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInvincible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetInvincible(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSkillAssetNames(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.Collections.Generic.List<string> arg1 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<string>));
			obj.GetSkillAssetNames(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.ScRoot arg0 = (Serclimax.ScRoot)ToLua.CheckObject(L, 2, typeof(Serclimax.ScRoot));
			obj.Initialize(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCoef(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Unit.ScUnitDefenseCoef o = obj.GetCoef(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalCoef(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			Fixedpoint.fInt o = obj.CalCoef(arg0, arg1);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			obj.Start();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Pause(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRoot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.ScRoot o = obj.GetRoot();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSearcher(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.IScAITypeSearcher o = obj.GetSearcher();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUnit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Unit.ScUnit o = obj.GetUnit(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateUnitParam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.Unit.UnitParam o = obj.CreateUnitParam();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GenerateUnit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.Unit.UnitParam arg0 = (Serclimax.Unit.UnitParam)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.UnitParam));
			Serclimax.Unit.ScUnit o = obj.GenerateUnit(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			Serclimax.ScEntity o = obj.CreateEntity(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGroupUnitPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			UnityEngine.Vector3[] arg2 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 4);
			System.Collections.Generic.List<UnityEngine.Vector3> o = obj.GetGroupUnitPosition(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGroupUnitPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			System.Collections.Generic.List<UnityEngine.Vector3> arg1 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
			Serclimax.Unit.ScUnitGroupData arg2 = (Serclimax.Unit.ScUnitGroupData)ToLua.CheckObject(L, 4, typeof(Serclimax.Unit.ScUnitGroupData));
			UnityEngine.Vector3[] arg3 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			int arg5 = (int)LuaDLL.luaL_checknumber(L, 7);
			obj.GetGroupUnitPos(arg0, ref arg1, arg2, arg3, arg4, arg5);
			ToLua.PushObject(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateGroupUnit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 4);
			UnityEngine.Vector3[] arg3 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 5);
			Serclimax.Unit.ScUnitBonus arg4 = (Serclimax.Unit.ScUnitBonus)ToLua.CheckObject(L, 6, typeof(Serclimax.Unit.ScUnitBonus));
			bool o = obj.CreateGroupUnit(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateGroupUnit4RedCmd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.ScRecordMgr.RedCommand[] arg0 = ToLua.CheckObjectArray<Serclimax.ScRecordMgr.RedCommand>(L, 2);
			obj.CreateGroupUnit4RedCmd(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateGroupUnit2RedCmd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 4);
			UnityEngine.Vector3[] arg3 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 5);
			Serclimax.Unit.ScUnitBonus arg4 = (Serclimax.Unit.ScUnitBonus)ToLua.CheckObject(L, 6, typeof(Serclimax.Unit.ScUnitBonus));
			Serclimax.ScRecordMgr.RedCommand[] o = obj.CreateGroupUnit2RedCmd(arg0, arg1, arg2, arg3, arg4);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyEntity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit));
			obj.DestroyEntity(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetValidUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int o = obj.GetValidUID();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableRootUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			bool o = obj.EnableRootUpdate();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.RUpdate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.RLateUpdate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			obj.ClearMsg();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBasePoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector2 o = obj.GetBasePoint(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAttackDirection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector2 o = obj.GetAttackDirection(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCurrentFirePoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 o = obj.GetCurrentFirePoint(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCurrentMinFirePoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 o = obj.GetCurrentMinFirePoint(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFireLineMoveDirection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.GetFireLineMoveDirection(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCurrentPopulation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.GetCurrentPopulation(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsCrossFireLine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitMgr), typeof(UnityEngine.Vector3), typeof(int)))
			{
				Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				bool o = obj.IsCrossFireLine(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitMgr), typeof(int), typeof(UnityEngine.Vector3), typeof(int)))
			{
				Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				bool o = obj.IsCrossFireLine(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Serclimax.Unit.ScUnitMgr.IsCrossFireLine");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFireLineDis(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			float o = obj.GetFireLineDis(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTeamTagFromTeamCollect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.Collections.Generic.List<Serclimax.Unit.ScUnit> o = obj.GetTeamTagFromTeamCollect(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartPointFireState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			obj.StartPointFireState(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemovePointFireTarget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit));
			obj.RemovePointFireTarget(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPointFireTarget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit));
			obj.AddPointFireTarget(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearPointFireState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			obj.ClearPointFireState();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsTagedUnitDead(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitMgr));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.IsTagedUnitDead(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxTeam2UnitCount(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Unit.ScUnitMgr.MaxTeam2UnitCount);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlayerCreateHandle(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Serclimax.Unit.ScUnitMgr.PlayerCreateHandle);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CreateHandle(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Serclimax.Unit.ScUnitMgr.CreateHandle);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DeleteHandle(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Serclimax.Unit.ScUnitMgr.DeleteHandle);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlayerCreateGroupHandle(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Serclimax.Unit.ScUnitMgr.PlayerCreateGroupHandle);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreFilterTeamID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			int ret = obj.IgnoreFilterTeamID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreFilterTeamID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUnitHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.Unit.ScUnitMgr.UnitHurtCallback ret = obj.onUnitHurt;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitHurt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUnitArrived(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.Unit.ScUnitMgr.UnitArrivedCallback ret = obj.onUnitArrived;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitArrived on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxSearchEnemy(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Unit.ScUnitMgr.MaxSearchEnemy);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CollectorMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.ScCollectorMgr ret = obj.CollectorMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CollectorMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Team2Count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			int ret = obj.Team2Count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Team2Count on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DefenseFactor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			float ret = obj.DefenseFactor;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DefenseFactor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Filter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.Unit.ScUnitFilter ret = obj.Filter;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Filter on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuildTableData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitDefenseData> ret = obj.BuildTableData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BuildTableData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitTableData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitData> ret = obj.UnitTableData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitTableData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			int ret = obj.UnitCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EnableHalfUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			bool ret = obj.EnableHalfUpdate;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnableHalfUpdate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HalfDeltaTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Fixedpoint.fInt ret = obj.HalfDeltaTime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HalfDeltaTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PointFireTargets(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			System.Collections.Generic.List<Serclimax.Unit.ScUnit> ret = obj.PointFireTargets;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PointFireTargets on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxTeam2UnitCount(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Unit.ScUnitMgr.MaxTeam2UnitCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PlayerCreateHandle(IntPtr L)
	{
		try
		{
			Serclimax.Unit.ScUnitMgr.PlayerCreateUnitCallBack arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Serclimax.Unit.ScUnitMgr.PlayerCreateUnitCallBack)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitMgr.PlayerCreateUnitCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.PlayerCreateUnitCallBack), func) as Serclimax.Unit.ScUnitMgr.PlayerCreateUnitCallBack;
			}

			Serclimax.Unit.ScUnitMgr.PlayerCreateHandle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CreateHandle(IntPtr L)
	{
		try
		{
			Serclimax.Unit.ScUnitMgr.CreateUnitCallBack arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Serclimax.Unit.ScUnitMgr.CreateUnitCallBack)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitMgr.CreateUnitCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.CreateUnitCallBack), func) as Serclimax.Unit.ScUnitMgr.CreateUnitCallBack;
			}

			Serclimax.Unit.ScUnitMgr.CreateHandle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DeleteHandle(IntPtr L)
	{
		try
		{
			Serclimax.Unit.ScUnitMgr.DeleteUnitCallBack arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Serclimax.Unit.ScUnitMgr.DeleteUnitCallBack)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitMgr.DeleteUnitCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.DeleteUnitCallBack), func) as Serclimax.Unit.ScUnitMgr.DeleteUnitCallBack;
			}

			Serclimax.Unit.ScUnitMgr.DeleteHandle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PlayerCreateGroupHandle(IntPtr L)
	{
		try
		{
			Serclimax.Unit.ScUnitMgr.PlayerCreateGroupCallback arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Serclimax.Unit.ScUnitMgr.PlayerCreateGroupCallback)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitMgr.PlayerCreateGroupCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.PlayerCreateGroupCallback), func) as Serclimax.Unit.ScUnitMgr.PlayerCreateGroupCallback;
			}

			Serclimax.Unit.ScUnitMgr.PlayerCreateGroupHandle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreFilterTeamID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.IgnoreFilterTeamID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreFilterTeamID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUnitHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.Unit.ScUnitMgr.UnitHurtCallback arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Serclimax.Unit.ScUnitMgr.UnitHurtCallback)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitMgr.UnitHurtCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.UnitHurtCallback), func) as Serclimax.Unit.ScUnitMgr.UnitHurtCallback;
			}

			obj.onUnitHurt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitHurt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUnitArrived(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitMgr obj = (Serclimax.Unit.ScUnitMgr)o;
			Serclimax.Unit.ScUnitMgr.UnitArrivedCallback arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Serclimax.Unit.ScUnitMgr.UnitArrivedCallback)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitMgr.UnitArrivedCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.UnitArrivedCallback), func) as Serclimax.Unit.ScUnitMgr.UnitArrivedCallback;
			}

			obj.onUnitArrived = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitArrived on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serclimax_Unit_ScUnitMgr_UnitArrivedCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.UnitArrivedCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serclimax_Unit_ScUnitMgr_UnitHurtCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.UnitHurtCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serclimax_Unit_ScUnitMgr_PlayerCreateGroupCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.PlayerCreateGroupCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serclimax_Unit_ScUnitMgr_DeleteUnitCallBack(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.DeleteUnitCallBack), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serclimax_Unit_ScUnitMgr_CreateUnitCallBack(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.CreateUnitCallBack), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serclimax_Unit_ScUnitMgr_PlayerCreateUnitCallBack(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnitMgr.PlayerCreateUnitCallBack), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

