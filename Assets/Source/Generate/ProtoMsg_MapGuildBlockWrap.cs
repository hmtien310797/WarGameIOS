//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ProtoMsg_MapGuildBlockWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ProtoMsg.MapGuildBlock), typeof(System.Object));
		L.RegFunction("New", _CreateProtoMsg_MapGuildBlock);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("guildid", get_guildid, set_guildid);
		L.RegVar("guildname", get_guildname, set_guildname);
		L.RegVar("guildbanner", get_guildbanner, set_guildbanner);
		L.RegVar("guildbadge", get_guildbadge, set_guildbadge);
		L.RegVar("pos", get_pos, null);
		L.RegVar("posindex", get_posindex, set_posindex);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateProtoMsg_MapGuildBlock(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ProtoMsg.MapGuildBlock obj = new ProtoMsg.MapGuildBlock();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ProtoMsg.MapGuildBlock.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_guildid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			uint ret = obj.guildid;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_guildname(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			string ret = obj.guildname;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildname on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_guildbanner(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			string ret = obj.guildbanner;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildbanner on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_guildbadge(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			uint ret = obj.guildbadge;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildbadge on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			System.Collections.Generic.List<ProtoMsg.Position> ret = obj.pos;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_posindex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			uint ret = obj.posindex;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index posindex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_guildid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.guildid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_guildname(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.guildname = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildname on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_guildbanner(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.guildbanner = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildbanner on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_guildbadge(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.guildbadge = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guildbadge on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_posindex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ProtoMsg.MapGuildBlock obj = (ProtoMsg.MapGuildBlock)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.posindex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index posindex on a nil value" : e.Message);
		}
	}
}

