//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_ScGlobalDataIdWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Serclimax.ScGlobalDataId));
		L.RegVar("SkillSlowMotionRatio", get_SkillSlowMotionRatio, null);
		L.RegVar("SkillSlowMotionDuration", get_SkillSlowMotionDuration, null);
		L.RegVar("FireLineOffset", get_FireLineOffset, null);
		L.RegVar("FireLineRetractSpeed", get_FireLineRetractSpeed, null);
		L.RegVar("DefenseFactor", get_DefenseFactor, null);
		L.RegVar("GodSkillGroupCooldown", get_GodSkillGroupCooldown, null);
		L.RegVar("MaxCameraAheadOfFireLine", get_MaxCameraAheadOfFireLine, null);
		L.RegVar("CameraFollowFireLineDelay", get_CameraFollowFireLineDelay, null);
		L.RegVar("TriggerCameraFollowFireLineOffset", get_TriggerCameraFollowFireLineOffset, null);
		L.RegVar("CameraFollowFireLineOffset", get_CameraFollowFireLineOffset, null);
		L.RegVar("FireLineRetractAcceleration", get_FireLineRetractAcceleration, null);
		L.RegVar("FireAreaRadius", get_FireAreaRadius, null);
		L.RegVar("TipsTotalNum", get_TipsTotalNum, null);
		L.RegVar("EachBuyEnergyAmount", get_EachBuyEnergyAmount, null);
		L.RegVar("HeroAdditionBaseList", get_HeroAdditionBaseList, null);
		L.RegVar("HeroExpDiscountFactor", get_HeroExpDiscountFactor, null);
		L.RegVar("PlayerExpItems", get_PlayerExpItems, null);
		L.RegVar("RequestArmyCost", get_RequestArmyCost, null);
		L.RegVar("PlayerMaxLevel", get_PlayerMaxLevel, null);
		L.RegVar("RequestChatRat", get_RequestChatRat, null);
		L.RegVar("ChatUnlock", get_ChatUnlock, null);
		L.RegVar("BuildFree", get_BuildFree, null);
		L.RegVar("TechFree", get_TechFree, null);
		L.RegVar("PveArmyPowerFactor", get_PveArmyPowerFactor, null);
		L.RegVar("WorldMapBarrackPicture", get_WorldMapBarrackPicture, null);
		L.RegVar("ExtralAttackForce", get_ExtralAttackForce, null);
		L.RegVar("AssistForce", get_AssistForce, null);
		L.RegVar("RestraintForce", get_RestraintForce, null);
		L.RegVar("WeakForce", get_WeakForce, null);
		L.RegVar("DefenseForce", get_DefenseForce, null);
		L.RegVar("CriticalChance", get_CriticalChance, null);
		L.RegVar("CriticalFactor", get_CriticalFactor, null);
		L.RegVar("BlockChance", get_BlockChance, null);
		L.RegVar("BlockFactor", get_BlockFactor, null);
		L.RegVar("WinLoseRoundCount", get_WinLoseRoundCount, null);
		L.RegVar("WinRevertPercent", get_WinRevertPercent, null);
		L.RegVar("LoseRevertPercent", get_LoseRevertPercent, null);
		L.RegVar("RestraintRelation1", get_RestraintRelation1, null);
		L.RegVar("RestraintRelation2", get_RestraintRelation2, null);
		L.RegVar("RestraintRelation3", get_RestraintRelation3, null);
		L.RegVar("RestraintRelation4", get_RestraintRelation4, null);
		L.RegVar("RestraintRelation5", get_RestraintRelation5, null);
		L.RegVar("RestraintRelation6", get_RestraintRelation6, null);
		L.RegVar("ExtralAttack", get_ExtralAttack, null);
		L.RegVar("ReturnLevel", get_ReturnLevel, null);
		L.RegVar("SLGPVPAttackTime", get_SLGPVPAttackTime, null);
		L.RegVar("SLGPVPAttackRoundWaitTime", get_SLGPVPAttackRoundWaitTime, null);
		L.RegVar("SLGPVPMoveAnimTime", get_SLGPVPMoveAnimTime, null);
		L.RegVar("SLGPVPBattleEndWaitTime", get_SLGPVPBattleEndWaitTime, null);
		L.RegVar("UnlockUnionMissionId", get_UnlockUnionMissionId, null);
		L.RegVar("PVPBatatleFightRange", get_PVPBatatleFightRange, null);
		L.RegVar("NoticeMoveSpeed", get_NoticeMoveSpeed, null);
		L.RegVar("AssembledTimeLevel", get_AssembledTimeLevel, null);
		L.RegVar("MagicHurtFactor6", get_MagicHurtFactor6, null);
		L.RegVar("MagicHurtFactor14", get_MagicHurtFactor14, null);
		L.RegVar("PveMonsterHpCoef", get_PveMonsterHpCoef, null);
		L.RegVar("PveMonsterAttackCoef", get_PveMonsterAttackCoef, null);
		L.RegVar("PayActivity", get_PayActivity, null);
		L.RegVar("PayFirstShow", get_PayFirstShow, null);
		L.RegVar("IngroResBar", get_IngroResBar, null);
		L.RegVar("MilitarySchoolPreviewHigh", get_MilitarySchoolPreviewHigh, null);
		L.RegVar("MilitarySchoolPreviewNormal", get_MilitarySchoolPreviewNormal, null);
		L.RegVar("RebelSurroundPos", get_RebelSurroundPos, null);
		L.RegVar("RebelSurroundCenter", get_RebelSurroundCenter, null);
		L.RegVar("RebelSurroundMonster", get_RebelSurroundMonster, null);
		L.RegVar("OnLimitsLanguage", get_OnLimitsLanguage, null);
		L.RegVar("ReloginOnBackground", get_ReloginOnBackground, null);
		L.RegVar("EnableExceptionReturnLogin", get_EnableExceptionReturnLogin, null);
		L.RegVar("BuglyConfigId", get_BuglyConfigId, null);
		L.RegVar("WorldMapMonsterRebirthInterval", get_WorldMapMonsterRebirthInterval, null);
		L.RegVar("WorldMapMaxSceneEnergy", get_WorldMapMaxSceneEnergy, null);
		L.RegVar("WorldMapMonsterOnceEnergy", get_WorldMapMonsterOnceEnergy, null);
		L.RegVar("WorldMapDistanceFactor", get_WorldMapDistanceFactor, null);
		L.RegVar("TradeBaseSpeed", get_TradeBaseSpeed, null);
		L.RegVar("BaseSoliderNum", get_BaseSoliderNum, null);
		L.RegVar("OccupyEnemyTimeFactor", get_OccupyEnemyTimeFactor, null);
		L.RegVar("OccupyMinTime", get_OccupyMinTime, null);
		L.RegVar("OccupyMaxTime", get_OccupyMaxTime, null);
		L.RegVar("OccupyTimeFactor", get_OccupyTimeFactor, null);
		L.RegVar("MassMinLevel", get_MassMinLevel, null);
		L.RegVar("MilitaryRefrushTime", get_MilitaryRefrushTime, null);
		L.RegVar("MilitaryRefrushCount1", get_MilitaryRefrushCount1, null);
		L.RegVar("MilitaryRefrushCount2", get_MilitaryRefrushCount2, null);
		L.RegVar("MilitaryRefrushCost1", get_MilitaryRefrushCost1, null);
		L.RegVar("MilitaryRefrushCost2", get_MilitaryRefrushCost2, null);
		L.RegVar("NewbieShieldLevel", get_NewbieShieldLevel, null);
		L.RegVar("NewbieShieldId", get_NewbieShieldId, null);
		L.RegVar("RestrictAreaSpeedFactor", get_RestrictAreaSpeedFactor, null);
		L.RegVar("BaseDefenceMaxNum", get_BaseDefenceMaxNum, null);
		L.RegVar("TrainFieldRewardInterval", get_TrainFieldRewardInterval, null);
		L.RegVar("TalentPageOpenLevel", get_TalentPageOpenLevel, null);
		L.RegVar("ResourceBaseCapacity", get_ResourceBaseCapacity, null);
		L.RegVar("UnionInvitationCost", get_UnionInvitationCost, null);
		L.RegVar("RebelArmyAttackDuration", get_RebelArmyAttackDuration, null);
		L.RegVar("RebelArmyAttackCD", get_RebelArmyAttackCD, null);
		L.RegVar("RebelArmyFortressWarningTime", get_RebelArmyFortressWarningTime, null);
		L.RegVar("RebelArmyFortressBattleTime", get_RebelArmyFortressBattleTime, null);
		L.RegVar("RebelArmyFortressCaptureTime", get_RebelArmyFortressCaptureTime, null);
		L.RegVar("DefaultHomeSkin", get_DefaultHomeSkin, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SkillSlowMotionRatio(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.SkillSlowMotionRatio);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SkillSlowMotionDuration(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.SkillSlowMotionDuration);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FireLineOffset(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.FireLineOffset);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FireLineRetractSpeed(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.FireLineRetractSpeed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DefenseFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.DefenseFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GodSkillGroupCooldown(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.GodSkillGroupCooldown);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxCameraAheadOfFireLine(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MaxCameraAheadOfFireLine);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CameraFollowFireLineDelay(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.CameraFollowFireLineDelay);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TriggerCameraFollowFireLineOffset(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.TriggerCameraFollowFireLineOffset);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CameraFollowFireLineOffset(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.CameraFollowFireLineOffset);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FireLineRetractAcceleration(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.FireLineRetractAcceleration);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FireAreaRadius(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.FireAreaRadius);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TipsTotalNum(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.TipsTotalNum);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EachBuyEnergyAmount(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.EachBuyEnergyAmount);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HeroAdditionBaseList(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.HeroAdditionBaseList);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HeroExpDiscountFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.HeroExpDiscountFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlayerExpItems(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PlayerExpItems);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RequestArmyCost(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RequestArmyCost);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlayerMaxLevel(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PlayerMaxLevel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RequestChatRat(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RequestChatRat);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ChatUnlock(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.ChatUnlock);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuildFree(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.BuildFree);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TechFree(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.TechFree);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PveArmyPowerFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PveArmyPowerFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorldMapBarrackPicture(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WorldMapBarrackPicture);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExtralAttackForce(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.ExtralAttackForce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssistForce(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.AssistForce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestraintForce(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestraintForce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeakForce(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WeakForce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DefenseForce(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.DefenseForce);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CriticalChance(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.CriticalChance);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CriticalFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.CriticalFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlockChance(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.BlockChance);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlockFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.BlockFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WinLoseRoundCount(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WinLoseRoundCount);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WinRevertPercent(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WinRevertPercent);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LoseRevertPercent(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.LoseRevertPercent);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestraintRelation1(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestraintRelation1);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestraintRelation2(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestraintRelation2);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestraintRelation3(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestraintRelation3);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestraintRelation4(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestraintRelation4);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestraintRelation5(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestraintRelation5);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestraintRelation6(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestraintRelation6);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExtralAttack(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.ExtralAttack);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReturnLevel(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.ReturnLevel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SLGPVPAttackTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.SLGPVPAttackTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SLGPVPAttackRoundWaitTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.SLGPVPAttackRoundWaitTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SLGPVPMoveAnimTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.SLGPVPMoveAnimTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SLGPVPBattleEndWaitTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.SLGPVPBattleEndWaitTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnlockUnionMissionId(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.UnlockUnionMissionId);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PVPBatatleFightRange(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PVPBatatleFightRange);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NoticeMoveSpeed(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.NoticeMoveSpeed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssembledTimeLevel(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.AssembledTimeLevel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MagicHurtFactor6(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MagicHurtFactor6);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MagicHurtFactor14(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MagicHurtFactor14);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PveMonsterHpCoef(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PveMonsterHpCoef);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PveMonsterAttackCoef(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PveMonsterAttackCoef);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PayActivity(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PayActivity);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PayFirstShow(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.PayFirstShow);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IngroResBar(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.IngroResBar);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MilitarySchoolPreviewHigh(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MilitarySchoolPreviewHigh);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MilitarySchoolPreviewNormal(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MilitarySchoolPreviewNormal);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelSurroundPos(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelSurroundPos);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelSurroundCenter(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelSurroundCenter);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelSurroundMonster(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelSurroundMonster);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnLimitsLanguage(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.OnLimitsLanguage);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReloginOnBackground(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.ReloginOnBackground);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EnableExceptionReturnLogin(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.EnableExceptionReturnLogin);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuglyConfigId(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.BuglyConfigId);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorldMapMonsterRebirthInterval(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WorldMapMonsterRebirthInterval);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorldMapMaxSceneEnergy(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WorldMapMaxSceneEnergy);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorldMapMonsterOnceEnergy(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WorldMapMonsterOnceEnergy);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorldMapDistanceFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.WorldMapDistanceFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TradeBaseSpeed(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.TradeBaseSpeed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BaseSoliderNum(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.BaseSoliderNum);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OccupyEnemyTimeFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.OccupyEnemyTimeFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OccupyMinTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.OccupyMinTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OccupyMaxTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.OccupyMaxTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OccupyTimeFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.OccupyTimeFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MassMinLevel(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MassMinLevel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MilitaryRefrushTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MilitaryRefrushTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MilitaryRefrushCount1(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MilitaryRefrushCount1);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MilitaryRefrushCount2(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MilitaryRefrushCount2);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MilitaryRefrushCost1(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MilitaryRefrushCost1);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MilitaryRefrushCost2(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.MilitaryRefrushCost2);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NewbieShieldLevel(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.NewbieShieldLevel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NewbieShieldId(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.NewbieShieldId);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RestrictAreaSpeedFactor(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RestrictAreaSpeedFactor);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BaseDefenceMaxNum(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.BaseDefenceMaxNum);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TrainFieldRewardInterval(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.TrainFieldRewardInterval);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TalentPageOpenLevel(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.TalentPageOpenLevel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResourceBaseCapacity(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.ResourceBaseCapacity);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnionInvitationCost(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.UnionInvitationCost);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelArmyAttackDuration(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelArmyAttackDuration);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelArmyAttackCD(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelArmyAttackCD);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelArmyFortressWarningTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelArmyFortressWarningTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelArmyFortressBattleTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelArmyFortressBattleTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RebelArmyFortressCaptureTime(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.RebelArmyFortressCaptureTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DefaultHomeSkin(IntPtr L)
	{
		ToLua.Push(L, Serclimax.ScGlobalDataId.DefaultHomeSkin);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Serclimax.ScGlobalDataId o = (Serclimax.ScGlobalDataId)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

