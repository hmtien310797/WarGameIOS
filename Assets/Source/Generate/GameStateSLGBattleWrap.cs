//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameStateSLGBattleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameStateSLGBattle), typeof(GameState));
		L.RegFunction("InitSimulateSLGPVPCfg", InitSimulateSLGPVPCfg);
		L.RegFunction("ShowHurt", ShowHurt);
		L.RegFunction("BattleEnd", BattleEnd);
		L.RegFunction("BattleSkillAnim", BattleSkillAnim);
		L.RegFunction("OnBattleEnd", OnBattleEnd);
		L.RegFunction("OnEnter", OnEnter);
		L.RegFunction("OnUpdate", OnUpdate);
		L.RegFunction("OnFixedUpdate", OnFixedUpdate);
		L.RegFunction("OnLeave", OnLeave);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("SlgPlayers", get_SlgPlayers, set_SlgPlayers);
		L.RegVar("heroBuffs", get_heroBuffs, set_heroBuffs);
		L.RegVar("onGameOver_Debug", get_onGameOver_Debug, set_onGameOver_Debug);
		L.RegVar("onGameOver", get_onGameOver, set_onGameOver);
		L.RegVar("onShowBattleState", get_onShowBattleState, set_onShowBattleState);
		L.RegVar("onShowBeatHurt", get_onShowBeatHurt, set_onShowBeatHurt);
		L.RegVar("onAnimFinish", get_onAnimFinish, set_onAnimFinish);
		L.RegVar("onSkipShowHeroFinish", get_onSkipShowHeroFinish, set_onSkipShowHeroFinish);
		L.RegVar("onShowHeroFinish", get_onShowHeroFinish, set_onShowHeroFinish);
		L.RegVar("onShowHero", get_onShowHero, set_onShowHero);
		L.RegVar("onShowHeroSkillEffect", get_onShowHeroSkillEffect, set_onShowHeroSkillEffect);
		L.RegVar("Slg_Random_Seed", get_Slg_Random_Seed, set_Slg_Random_Seed);
		L.RegVar("strAConfig", get_strAConfig, set_strAConfig);
		L.RegVar("strDConfig", get_strDConfig, set_strDConfig);
		L.RegVar("strPhalanxConfig", get_strPhalanxConfig, set_strPhalanxConfig);
		L.RegVar("Instance", get_Instance, null);
		L.RegFunction("OnShowHeroSkillEffect", GameStateSLGBattle_OnShowHeroSkillEffect);
		L.RegFunction("OnShowHero", GameStateSLGBattle_OnShowHero);
		L.RegFunction("OnShowHeroFinish", GameStateSLGBattle_OnShowHeroFinish);
		L.RegFunction("OnSkipShowHeroFinish", GameStateSLGBattle_OnSkipShowHeroFinish);
		L.RegFunction("OnAnimFinish", GameStateSLGBattle_OnAnimFinish);
		L.RegFunction("OnShowBeatHurt", GameStateSLGBattle_OnShowBeatHurt);
		L.RegFunction("OnShowBattleState", GameStateSLGBattle_OnShowBattleState);
		L.RegFunction("OnGameOver", GameStateSLGBattle_OnGameOver);
		L.RegFunction("OnGameOver_Debug", GameStateSLGBattle_OnGameOver_Debug);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitSimulateSLGPVPCfg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			GameStateSLGBattle.InitSimulateSLGPVPCfg();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowHurt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			long arg2 = (long)LuaDLL.luaL_checknumber(L, 4);
			obj.ShowHurt(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BattleEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			obj.BattleEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BattleSkillAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			obj.BattleSkillAnim();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBattleEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			obj.OnBattleEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			string arg0 = ToLua.CheckString(L, 2);
			System.Action arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (System.Action)ToLua.CheckObject(L, 3, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.OnEnter(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			obj.OnUpdate();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnFixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			obj.OnFixedUpdate();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLeave(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)ToLua.CheckObject(L, 1, typeof(GameStateSLGBattle));
			obj.OnLeave();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SlgPlayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			Serclimax.SLGPVP.ScSLGPlayer[] ret = obj.SlgPlayers;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SlgPlayers on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_heroBuffs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			HeroBuffShowInfo ret = obj.heroBuffs;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index heroBuffs on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onGameOver_Debug(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnGameOver_Debug ret = obj.onGameOver_Debug;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onGameOver_Debug on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onGameOver(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnGameOver ret = obj.onGameOver;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onGameOver on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onShowBattleState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowBattleState ret = obj.onShowBattleState;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowBattleState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onShowBeatHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowBeatHurt ret = obj.onShowBeatHurt;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowBeatHurt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onAnimFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnAnimFinish ret = obj.onAnimFinish;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onAnimFinish on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onSkipShowHeroFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnSkipShowHeroFinish ret = obj.onSkipShowHeroFinish;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onSkipShowHeroFinish on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onShowHeroFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowHeroFinish ret = obj.onShowHeroFinish;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowHeroFinish on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onShowHero(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowHero ret = obj.onShowHero;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowHero on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onShowHeroSkillEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowHeroSkillEffect ret = obj.onShowHeroSkillEffect;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowHeroSkillEffect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Slg_Random_Seed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			int ret = obj.Slg_Random_Seed;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Slg_Random_Seed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_strAConfig(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			string ret = obj.strAConfig;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strAConfig on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_strDConfig(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			string ret = obj.strDConfig;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strDConfig on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_strPhalanxConfig(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			string ret = obj.strPhalanxConfig;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strPhalanxConfig on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GameStateSLGBattle.Instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SlgPlayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			Serclimax.SLGPVP.ScSLGPlayer[] arg0 = ToLua.CheckObjectArray<Serclimax.SLGPVP.ScSLGPlayer>(L, 2);
			obj.SlgPlayers = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SlgPlayers on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_heroBuffs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			HeroBuffShowInfo arg0 = (HeroBuffShowInfo)ToLua.CheckObject(L, 2, typeof(HeroBuffShowInfo));
			obj.heroBuffs = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index heroBuffs on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onGameOver_Debug(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnGameOver_Debug arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnGameOver_Debug)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnGameOver_Debug));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnGameOver_Debug), func) as GameStateSLGBattle.OnGameOver_Debug;
			}

			obj.onGameOver_Debug = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onGameOver_Debug on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onGameOver(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnGameOver arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnGameOver)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnGameOver));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnGameOver), func) as GameStateSLGBattle.OnGameOver;
			}

			obj.onGameOver = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onGameOver on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onShowBattleState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowBattleState arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnShowBattleState)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnShowBattleState));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowBattleState), func) as GameStateSLGBattle.OnShowBattleState;
			}

			obj.onShowBattleState = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowBattleState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onShowBeatHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowBeatHurt arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnShowBeatHurt)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnShowBeatHurt));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowBeatHurt), func) as GameStateSLGBattle.OnShowBeatHurt;
			}

			obj.onShowBeatHurt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowBeatHurt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onAnimFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnAnimFinish arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnAnimFinish)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnAnimFinish));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnAnimFinish), func) as GameStateSLGBattle.OnAnimFinish;
			}

			obj.onAnimFinish = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onAnimFinish on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onSkipShowHeroFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnSkipShowHeroFinish arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnSkipShowHeroFinish)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnSkipShowHeroFinish));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnSkipShowHeroFinish), func) as GameStateSLGBattle.OnSkipShowHeroFinish;
			}

			obj.onSkipShowHeroFinish = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onSkipShowHeroFinish on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onShowHeroFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowHeroFinish arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnShowHeroFinish)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnShowHeroFinish));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowHeroFinish), func) as GameStateSLGBattle.OnShowHeroFinish;
			}

			obj.onShowHeroFinish = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowHeroFinish on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onShowHero(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowHero arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnShowHero)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnShowHero));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowHero), func) as GameStateSLGBattle.OnShowHero;
			}

			obj.onShowHero = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowHero on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onShowHeroSkillEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			GameStateSLGBattle.OnShowHeroSkillEffect arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GameStateSLGBattle.OnShowHeroSkillEffect)ToLua.CheckObject(L, 2, typeof(GameStateSLGBattle.OnShowHeroSkillEffect));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowHeroSkillEffect), func) as GameStateSLGBattle.OnShowHeroSkillEffect;
			}

			obj.onShowHeroSkillEffect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onShowHeroSkillEffect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Slg_Random_Seed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Slg_Random_Seed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Slg_Random_Seed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_strAConfig(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.strAConfig = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strAConfig on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_strDConfig(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.strDConfig = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strDConfig on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_strPhalanxConfig(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameStateSLGBattle obj = (GameStateSLGBattle)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.strPhalanxConfig = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index strPhalanxConfig on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnShowHeroSkillEffect(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowHeroSkillEffect), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnShowHero(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowHero), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnShowHeroFinish(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowHeroFinish), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnSkipShowHeroFinish(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnSkipShowHeroFinish), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnAnimFinish(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnAnimFinish), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnShowBeatHurt(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowBeatHurt), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnShowBattleState(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnShowBattleState), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnGameOver(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnGameOver), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateSLGBattle_OnGameOver_Debug(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateSLGBattle.OnGameOver_Debug), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

