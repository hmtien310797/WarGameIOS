//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_ScRootWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.ScRoot), typeof(System.Object));
		L.RegFunction("Restart", Restart);
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("Update", Update);
		L.RegFunction("GetUnitMgr", GetUnitMgr);
		L.RegFunction("GetBattle", GetBattle);
		L.RegFunction("GetTimerMgr", GetTimerMgr);
		L.RegFunction("GetWalkabledPos", GetWalkabledPos);
		L.RegFunction("New", _CreateSerclimax_ScRoot);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("InitActiveEventUIDs", get_InitActiveEventUIDs, set_InitActiveEventUIDs);
		L.RegVar("EventDataset", get_EventDataset, set_EventDataset);
		L.RegVar("Astar", get_Astar, set_Astar);
		L.RegVar("LevelData", get_LevelData, set_LevelData);
		L.RegVar("GamePaused", get_GamePaused, set_GamePaused);
		L.RegVar("IgnoreHurt", get_IgnoreHurt, set_IgnoreHurt);
		L.RegVar("IgnoreWeaponRandom", get_IgnoreWeaponRandom, set_IgnoreWeaponRandom);
		L.RegVar("IgnoreWeaponDis", get_IgnoreWeaponDis, set_IgnoreWeaponDis);
		L.RegVar("deltaTime", get_deltaTime, set_deltaTime);
		L.RegVar("Random", get_Random, set_Random);
		L.RegVar("Sc2Cs", get_Sc2Cs, null);
		L.RegVar("Cs2Sc", get_Cs2Sc, null);
		L.RegVar("Cs2ScDis", get_Cs2ScDis, null);
		L.RegVar("TableMgr", get_TableMgr, null);
		L.RegVar("SpaceList", get_SpaceList, null);
		L.RegVar("SkillMgr", get_SkillMgr, null);
		L.RegVar("UnitMgr", get_UnitMgr, null);
		L.RegVar("Battle", get_Battle, null);
		L.RegVar("TimerMgr", get_TimerMgr, null);
		L.RegVar("RecordMgr", get_RecordMgr, null);
		L.RegVar("ULogicMgr", get_ULogicMgr, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_ScRoot(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6)
			{
				Serclimax.IScMsgDispose arg0 = (Serclimax.IScMsgDispose)ToLua.CheckObject(L, 1, typeof(Serclimax.IScMsgDispose));
				Serclimax.ScTableMgr arg1 = (Serclimax.ScTableMgr)ToLua.CheckObject(L, 2, typeof(Serclimax.ScTableMgr));
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				float arg5 = (float)LuaDLL.luaL_checknumber(L, 6);
				Serclimax.ScRoot obj = new Serclimax.ScRoot(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.ScRoot.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Restart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)ToLua.CheckObject(L, 1, typeof(Serclimax.ScRoot));
			obj.Restart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)ToLua.CheckObject(L, 1, typeof(Serclimax.ScRoot));
			obj.Initialize();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)ToLua.CheckObject(L, 1, typeof(Serclimax.ScRoot));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUnitMgr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)ToLua.CheckObject(L, 1, typeof(Serclimax.ScRoot));
			Serclimax.Unit.ScUnitMgr o = obj.GetUnitMgr();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)ToLua.CheckObject(L, 1, typeof(Serclimax.ScRoot));
			Serclimax.Battle.ScBattle o = obj.GetBattle();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTimerMgr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)ToLua.CheckObject(L, 1, typeof(Serclimax.ScRoot));
			Serclimax.Timer.ScTimerMgr o = obj.GetTimerMgr();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetWalkabledPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)ToLua.CheckObject(L, 1, typeof(Serclimax.ScRoot));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			UnityEngine.Vector3 o = obj.GetWalkabledPos(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InitActiveEventUIDs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			int[] ret = obj.InitActiveEventUIDs;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InitActiveEventUIDs on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EventDataset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Event.ScEventDataset ret = obj.EventDataset;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EventDataset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Astar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.NiceAstarPath ret = obj.Astar;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Astar on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LevelData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Level.ScLevelData ret = obj.LevelData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LevelData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GamePaused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool ret = obj.GamePaused;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GamePaused on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool ret = obj.IgnoreHurt;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreHurt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreWeaponRandom(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool ret = obj.IgnoreWeaponRandom;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreWeaponRandom on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreWeaponDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool ret = obj.IgnoreWeaponDis;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreWeaponDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_deltaTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			float ret = obj.deltaTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index deltaTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Random(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.ScRandom ret = obj.Random;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Random on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sc2Cs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.ScCollDatCenter ret = obj.Sc2Cs;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Sc2Cs on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cs2Sc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.ScCollDatCenter ret = obj.Cs2Sc;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Cs2Sc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cs2ScDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.ScDisDaCenter ret = obj.Cs2ScDis;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Cs2ScDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TableMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.ScTableMgr ret = obj.TableMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TableMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SpaceList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.QuadSpace.ScSpaceList ret = obj.SpaceList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SpaceList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SkillMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Skill.ScSkillMgr ret = obj.SkillMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SkillMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Unit.ScUnitMgr ret = obj.UnitMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Battle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Battle.ScBattle ret = obj.Battle;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Battle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TimerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Timer.ScTimerMgr ret = obj.TimerMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TimerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RecordMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.ScRecordMgr ret = obj.RecordMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RecordMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ULogicMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Unit.ScULogicMgr ret = obj.ULogicMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ULogicMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_InitActiveEventUIDs(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			obj.InitActiveEventUIDs = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InitActiveEventUIDs on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EventDataset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Event.ScEventDataset arg0 = (Serclimax.Event.ScEventDataset)ToLua.CheckObject(L, 2, typeof(Serclimax.Event.ScEventDataset));
			obj.EventDataset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EventDataset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Astar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.NiceAstarPath arg0 = (Serclimax.NiceAstarPath)ToLua.CheckObject(L, 2, typeof(Serclimax.NiceAstarPath));
			obj.Astar = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Astar on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LevelData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.Level.ScLevelData arg0 = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 2, typeof(Serclimax.Level.ScLevelData));
			obj.LevelData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LevelData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GamePaused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.GamePaused = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GamePaused on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IgnoreHurt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreHurt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreWeaponRandom(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IgnoreWeaponRandom = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreWeaponRandom on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreWeaponDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IgnoreWeaponDis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreWeaponDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_deltaTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.deltaTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index deltaTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Random(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScRoot obj = (Serclimax.ScRoot)o;
			Serclimax.ScRandom arg0 = (Serclimax.ScRandom)ToLua.CheckObject(L, 2, typeof(Serclimax.ScRandom));
			obj.Random = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Random on a nil value" : e.Message);
		}
	}
}

