//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_SLGPVP_ScSLGPVPResultWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.SLGPVP.ScSLGPVPResult), typeof(System.Object));
		L.RegFunction("FillResult", FillResult);
		L.RegFunction("FillResult4Wave", FillResult4Wave);
		L.RegFunction("New", _CreateSerclimax_SLGPVP_ScSLGPVPResult);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("WinCamp", get_WinCamp, set_WinCamp);
		L.RegVar("ArmyTotalNum", get_ArmyTotalNum, set_ArmyTotalNum);
		L.RegVar("ArmyDeadNum", get_ArmyDeadNum, set_ArmyDeadNum);
		L.RegVar("ArmyInjuredNum", get_ArmyInjuredNum, set_ArmyInjuredNum);
		L.RegVar("ArmyLossFighting", get_ArmyLossFighting, set_ArmyLossFighting);
		L.RegVar("ArmyLivedNum", get_ArmyLivedNum, set_ArmyLivedNum);
		L.RegVar("Exp", get_Exp, set_Exp);
		L.RegVar("ACampPlayers", get_ACampPlayers, set_ACampPlayers);
		L.RegVar("DCampPlayers", get_DCampPlayers, set_DCampPlayers);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_SLGPVP_ScSLGPVPResult(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.SLGPVP.ScSLGPVPResult obj = new Serclimax.SLGPVP.ScSLGPVPResult();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.SLGPVP.ScSLGPVPResult.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FillResult(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPVPResult));
			Serclimax.SLGPVP.ScSLGCamp[] arg0 = ToLua.CheckObjectArray<Serclimax.SLGPVP.ScSLGCamp>(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.FillResult(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FillResult4Wave(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPVPResult));
			Serclimax.SLGPVP.ScSLGPlayer[] arg0 = ToLua.CheckObjectArray<Serclimax.SLGPVP.ScSLGPlayer>(L, 2);
			Serclimax.SLGPVP.ScSLGPlayer[] arg1 = ToLua.CheckObjectArray<Serclimax.SLGPVP.ScSLGPlayer>(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.FillResult4Wave(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WinCamp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			uint[] ret = obj.WinCamp;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WinCamp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArmyTotalNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] ret = obj.ArmyTotalNum;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyTotalNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArmyDeadNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] ret = obj.ArmyDeadNum;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyDeadNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArmyInjuredNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] ret = obj.ArmyInjuredNum;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyInjuredNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArmyLossFighting(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			float[] ret = obj.ArmyLossFighting;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyLossFighting on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArmyLivedNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] ret = obj.ArmyLivedNum;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyLivedNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Exp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			float[] ret = obj.Exp;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Exp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ACampPlayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult> ret = obj.ACampPlayers;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ACampPlayers on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DCampPlayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult> ret = obj.DCampPlayers;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DCampPlayers on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WinCamp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
			obj.WinCamp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WinCamp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ArmyTotalNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
			obj.ArmyTotalNum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyTotalNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ArmyDeadNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
			obj.ArmyDeadNum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyDeadNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ArmyInjuredNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
			obj.ArmyInjuredNum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyInjuredNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ArmyLossFighting(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
			obj.ArmyLossFighting = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyLossFighting on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ArmyLivedNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
			obj.ArmyLivedNum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyLivedNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Exp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
			obj.Exp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Exp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ACampPlayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult> arg0 = (System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult>));
			obj.ACampPlayers = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ACampPlayers on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DCampPlayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPVPResult obj = (Serclimax.SLGPVP.ScSLGPVPResult)o;
			System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult> arg0 = (System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGPlayerResult>));
			obj.DCampPlayers = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DCampPlayers on a nil value" : e.Message);
		}
	}
}

