//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Player_ScCastSkillMsg_SkillUpdateInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo), typeof(System.Object));
		L.RegFunction("New", _CreateSerclimax_Player_ScCastSkillMsg_SkillUpdateInfo);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("skillIndex", get_skillIndex, set_skillIndex);
		L.RegVar("cooldown", get_cooldown, set_cooldown);
		L.RegVar("totalCooldown", get_totalCooldown, set_totalCooldown);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Player_ScCastSkillMsg_SkillUpdateInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo obj = new Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo obj = (Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo)o;
			int ret = obj.skillIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cooldown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo obj = (Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo)o;
			float ret = obj.cooldown;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cooldown on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalCooldown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo obj = (Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo)o;
			float ret = obj.totalCooldown;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index totalCooldown on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo obj = (Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.skillIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cooldown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo obj = (Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.cooldown = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cooldown on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_totalCooldown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo obj = (Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.totalCooldown = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index totalCooldown on a nil value" : e.Message);
		}
	}
}

