//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_ScEntityWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.ScEntity), typeof(System.Object));
		L.RegFunction("InitEntity", InitEntity);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("isDestroy", isDestroy);
		L.RegFunction("UpdateUID", UpdateUID);
		L.RegFunction("Update", Update);
		L.RegFunction("OnRelease", OnRelease);
		L.RegFunction("OnEnterPool", OnEnterPool);
		L.RegFunction("New", _CreateSerclimax_ScEntity);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("UID", get_UID, null);
		L.RegVar("AIer", get_AIer, null);
		L.RegVar("Mgr", get_Mgr, null);
		L.RegVar("Data", get_Data, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_ScEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.ScEntity obj = new Serclimax.ScEntity();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.ScEntity.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)ToLua.CheckObject(L, 1, typeof(Serclimax.ScEntity));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.IScEntityData arg1 = (Serclimax.IScEntityData)ToLua.CheckObject(L, 3, typeof(Serclimax.IScEntityData));
			Serclimax.IScEntityMgr arg2 = (Serclimax.IScEntityMgr)ToLua.CheckObject(L, 4, typeof(Serclimax.IScEntityMgr));
			object[] arg3 = ToLua.ToParamsObject(L, 5, count - 4);
			obj.InitEntity(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)ToLua.CheckObject(L, 1, typeof(Serclimax.ScEntity));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)ToLua.CheckObject(L, 1, typeof(Serclimax.ScEntity));
			bool o = obj.isDestroy();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)ToLua.CheckObject(L, 1, typeof(Serclimax.ScEntity));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateUID(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)ToLua.CheckObject(L, 1, typeof(Serclimax.ScEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnRelease(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)ToLua.CheckObject(L, 1, typeof(Serclimax.ScEntity));
			obj.OnRelease();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnterPool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)ToLua.CheckObject(L, 1, typeof(Serclimax.ScEntity));
			obj.OnEnterPool();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)o;
			int ret = obj.UID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AIer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)o;
			Serclimax.ScAIer ret = obj.AIer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AIer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Mgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)o;
			Serclimax.IScEntityMgr ret = obj.Mgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Mgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScEntity obj = (Serclimax.ScEntity)o;
			Serclimax.IScEntityData ret = obj.Data;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Data on a nil value" : e.Message);
		}
	}
}

