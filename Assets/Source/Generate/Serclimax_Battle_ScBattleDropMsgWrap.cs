//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Battle_ScBattleDropMsgWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Battle.ScBattleDropMsg), typeof(System.Object));
		L.RegFunction("EnableOverwirte", EnableOverwirte);
		L.RegFunction("GetDisposeType", GetDisposeType);
		L.RegFunction("GetEntityUID", GetEntityUID);
		L.RegFunction("SetEntityUID", SetEntityUID);
		L.RegFunction("New", _CreateSerclimax_Battle_ScBattleDropMsg);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("dropPos", get_dropPos, set_dropPos);
		L.RegVar("itemList", get_itemList, set_itemList);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Battle_ScBattleDropMsg(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Battle.ScBattleDropMsg obj = new Serclimax.Battle.ScBattleDropMsg();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Battle.ScBattleDropMsg.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableOverwirte(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattleDropMsg));
			bool o = obj.EnableOverwirte();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDisposeType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattleDropMsg));
			Serclimax.ScDefineDisMsgEnum o = obj.GetDisposeType();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEntityUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattleDropMsg));
			int o = obj.GetEntityUID();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetEntityUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattleDropMsg));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetEntityUID(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dropPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)o;
			UnityEngine.Vector3 ret = obj.dropPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dropPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)o;
			System.Collections.Generic.List<Serclimax.Battle.ScBattleDropMsg.DropItem> ret = obj.itemList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dropPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.dropPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dropPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattleDropMsg obj = (Serclimax.Battle.ScBattleDropMsg)o;
			System.Collections.Generic.List<Serclimax.Battle.ScBattleDropMsg.DropItem> arg0 = (System.Collections.Generic.List<Serclimax.Battle.ScBattleDropMsg.DropItem>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.Battle.ScBattleDropMsg.DropItem>));
			obj.itemList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemList on a nil value" : e.Message);
		}
	}
}

