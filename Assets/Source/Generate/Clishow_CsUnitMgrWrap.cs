//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Clishow_CsUnitMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Clishow.CsUnitMgr), typeof(Clishow.CsSingletonBehaviour<Clishow.CsUnitMgr>));
		L.RegFunction("IsAutoInit", IsAutoInit);
		L.RegFunction("IsGlobal", IsGlobal);
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("DisposeUnitMsg", DisposeUnitMsg);
		L.RegFunction("GetGuideTargetUnit", GetGuideTargetUnit);
		L.RegFunction("GetUnit", GetUnit);
		L.RegFunction("DisposeCreateUnitMsg", DisposeCreateUnitMsg);
		L.RegFunction("CreateUnit4SLG", CreateUnit4SLG);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("IgnoreDisposeMsg", get_IgnoreDisposeMsg, set_IgnoreDisposeMsg);
		L.RegVar("SuccessGroupName", get_SuccessGroupName, null);
		L.RegVar("mSuccessGroupUnits", get_mSuccessGroupUnits, set_mSuccessGroupUnits);
		L.RegVar("FailedGroupName", get_FailedGroupName, null);
		L.RegVar("mFailedGroupUnits", get_mFailedGroupUnits, set_mFailedGroupUnits);
		L.RegVar("UnitTable", get_UnitTable, set_UnitTable);
		L.RegVar("BuildTable", get_BuildTable, set_BuildTable);
		L.RegVar("UnitSfxData", get_UnitSfxData, set_UnitSfxData);
		L.RegVar("onUnitCreated", get_onUnitCreated, set_onUnitCreated);
		L.RegVar("onUnitRemoved", get_onUnitRemoved, set_onUnitRemoved);
		L.RegVar("UnitSfxPrefab", get_UnitSfxPrefab, null);
		L.RegVar("UnitCount", get_UnitCount, null);
		L.RegFunction("OnUnitRemoved", Clishow_CsUnitMgr_OnUnitRemoved);
		L.RegFunction("OnUnitCreated", Clishow_CsUnitMgr_OnUnitCreated);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsAutoInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			bool o = obj.IsAutoInit();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsGlobal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			bool o = obj.IsGlobal();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.Initialize(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			obj.OnDestroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisposeUnitMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			Serclimax.ScDefineDisMsgEnum arg0 = (Serclimax.ScDefineDisMsgEnum)ToLua.CheckObject(L, 2, typeof(Serclimax.ScDefineDisMsgEnum));
			Serclimax.IScMsgBase arg1 = (Serclimax.IScMsgBase)ToLua.CheckObject(L, 3, typeof(Serclimax.IScMsgBase));
			obj.DisposeUnitMsg(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGuideTargetUnit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			string arg0 = ToLua.CheckString(L, 2);
			Clishow.CsUnit o = obj.GetGuideTargetUnit(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUnit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Clishow.CsUnit o = obj.GetUnit(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisposeCreateUnitMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			Serclimax.ScDefineDisMsgEnum arg0 = (Serclimax.ScDefineDisMsgEnum)ToLua.CheckObject(L, 2, typeof(Serclimax.ScDefineDisMsgEnum));
			Serclimax.IScMsgBase arg1 = (Serclimax.IScMsgBase)ToLua.CheckObject(L, 3, typeof(Serclimax.IScMsgBase));
			obj.DisposeCreateUnitMsg(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateUnit4SLG(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)ToLua.CheckObject(L, 1, typeof(Clishow.CsUnitMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Unit.ScUnitType arg1 = (Serclimax.Unit.ScUnitType)ToLua.CheckObject(L, 3, typeof(Serclimax.Unit.ScUnitType));
			Clishow.CsUnit o = obj.CreateUnit4SLG(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreDisposeMsg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			bool ret = obj.IgnoreDisposeMsg;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreDisposeMsg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SuccessGroupName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Clishow.CsUnitMgr.SuccessGroupName);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSuccessGroupUnits(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			System.Collections.Generic.List<Clishow.CsUnit> ret = obj.mSuccessGroupUnits;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSuccessGroupUnits on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FailedGroupName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Clishow.CsUnitMgr.FailedGroupName);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mFailedGroupUnits(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			System.Collections.Generic.List<Clishow.CsUnit> ret = obj.mFailedGroupUnits;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFailedGroupUnits on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitData> ret = obj.UnitTable;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitTable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuildTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitDefenseData> ret = obj.BuildTable;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BuildTable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitSfxData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitSfxData> ret = obj.UnitSfxData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitSfxData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUnitCreated(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Clishow.CsUnitMgr.OnUnitCreated ret = obj.onUnitCreated;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitCreated on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUnitRemoved(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Clishow.CsUnitMgr.OnUnitRemoved ret = obj.onUnitRemoved;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitRemoved on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitSfxPrefab(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			UnityEngine.GameObject ret = obj.UnitSfxPrefab;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitSfxPrefab on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			int ret = obj.UnitCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreDisposeMsg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IgnoreDisposeMsg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreDisposeMsg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSuccessGroupUnits(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			System.Collections.Generic.List<Clishow.CsUnit> arg0 = (System.Collections.Generic.List<Clishow.CsUnit>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Clishow.CsUnit>));
			obj.mSuccessGroupUnits = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSuccessGroupUnits on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mFailedGroupUnits(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			System.Collections.Generic.List<Clishow.CsUnit> arg0 = (System.Collections.Generic.List<Clishow.CsUnit>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Clishow.CsUnit>));
			obj.mFailedGroupUnits = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFailedGroupUnits on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitData> arg0 = (Serclimax.ScTableData<Serclimax.Unit.ScUnitData>)ToLua.CheckObject(L, 2, typeof(Serclimax.ScTableData<Serclimax.Unit.ScUnitData>));
			obj.UnitTable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitTable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BuildTable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitDefenseData> arg0 = (Serclimax.ScTableData<Serclimax.Unit.ScUnitDefenseData>)ToLua.CheckObject(L, 2, typeof(Serclimax.ScTableData<Serclimax.Unit.ScUnitDefenseData>));
			obj.BuildTable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BuildTable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitSfxData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Serclimax.ScTableData<Serclimax.Unit.ScUnitSfxData> arg0 = (Serclimax.ScTableData<Serclimax.Unit.ScUnitSfxData>)ToLua.CheckObject(L, 2, typeof(Serclimax.ScTableData<Serclimax.Unit.ScUnitSfxData>));
			obj.UnitSfxData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitSfxData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUnitCreated(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Clishow.CsUnitMgr.OnUnitCreated arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Clishow.CsUnitMgr.OnUnitCreated)ToLua.CheckObject(L, 2, typeof(Clishow.CsUnitMgr.OnUnitCreated));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Clishow.CsUnitMgr.OnUnitCreated), func) as Clishow.CsUnitMgr.OnUnitCreated;
			}

			obj.onUnitCreated = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitCreated on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUnitRemoved(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Clishow.CsUnitMgr obj = (Clishow.CsUnitMgr)o;
			Clishow.CsUnitMgr.OnUnitRemoved arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Clishow.CsUnitMgr.OnUnitRemoved)ToLua.CheckObject(L, 2, typeof(Clishow.CsUnitMgr.OnUnitRemoved));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Clishow.CsUnitMgr.OnUnitRemoved), func) as Clishow.CsUnitMgr.OnUnitRemoved;
			}

			obj.onUnitRemoved = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onUnitRemoved on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clishow_CsUnitMgr_OnUnitRemoved(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Clishow.CsUnitMgr.OnUnitRemoved), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clishow_CsUnitMgr_OnUnitCreated(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Clishow.CsUnitMgr.OnUnitCreated), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

