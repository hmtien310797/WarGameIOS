//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HeroBuffShowInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HeroBuffShowInfo), typeof(System.Object));
		L.RegFunction("New", _CreateHeroBuffShowInfo);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("HeroBuffIds", get_HeroBuffIds, set_HeroBuffIds);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHeroBuffShowInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				HeroBuffShowInfo obj = new HeroBuffShowInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: HeroBuffShowInfo.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HeroBuffIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HeroBuffShowInfo obj = (HeroBuffShowInfo)o;
			int[] ret = obj.HeroBuffIds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HeroBuffIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HeroBuffIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HeroBuffShowInfo obj = (HeroBuffShowInfo)o;
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			obj.HeroBuffIds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HeroBuffIds on a nil value" : e.Message);
		}
	}
}

