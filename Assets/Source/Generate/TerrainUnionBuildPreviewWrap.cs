//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TerrainUnionBuildPreviewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(TerrainUnionBuildPreview), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("Reset", Reset);
		L.RegFunction("CanBuild", CanBuild);
		L.RegFunction("DisplayPreview", DisplayPreview);
		L.RegFunction("HideAllBox", HideAllBox);
		L.RegFunction("CurSelectPosX", CurSelectPosX);
		L.RegFunction("CurSelectPosY", CurSelectPosY);
		L.RegFunction("DrawPreview", DrawPreview);
		L.RegFunction("New", _CreateTerrainUnionBuildPreview);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("Offset", get_Offset, set_Offset);
		L.RegVar("PreviewBox", get_PreviewBox, set_PreviewBox);
		L.RegVar("PreviewBoxUnit", get_PreviewBoxUnit, set_PreviewBoxUnit);
		L.RegVar("RedTex", get_RedTex, set_RedTex);
		L.RegVar("GreenTex", get_GreenTex, set_GreenTex);
		L.RegVar("LayerName", get_LayerName, set_LayerName);
		L.RegVar("IsDebug", get_IsDebug, set_IsDebug);
		L.RegVar("unionBuilds", get_unionBuilds, set_unionBuilds);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateTerrainUnionBuildPreview(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				TerrainUnionBuildPreview obj = new TerrainUnionBuildPreview();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: TerrainUnionBuildPreview.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			WorldData arg0 = (WorldData)ToLua.CheckUnityObject(L, 2, typeof(WorldData));
			obj.Init(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			obj.Reset();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CanBuild(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			bool o = obj.CanBuild();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisplayPreview(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			obj.DisplayPreview(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideAllBox(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			obj.HideAllBox();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CurSelectPosX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			int o = obj.CurSelectPosX();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CurSelectPosY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			int o = obj.CurSelectPosY();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawPreview(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)ToLua.CheckObject(L, 1, typeof(TerrainUnionBuildPreview));
			obj.DrawPreview();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Offset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UnityEngine.Vector3 ret = obj.Offset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Offset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PreviewBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UIPanel ret = obj.PreviewBox;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PreviewBox on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PreviewBoxUnit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UITexture ret = obj.PreviewBoxUnit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PreviewBoxUnit on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RedTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UnityEngine.Texture2D ret = obj.RedTex;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RedTex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GreenTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UnityEngine.Texture2D ret = obj.GreenTex;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GreenTex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LayerName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			string ret = obj.LayerName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LayerName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsDebug(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			bool ret = obj.IsDebug;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsDebug on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unionBuilds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			TerrainUnionBuildPreview.UnionBuildInfo[] ret = obj.unionBuilds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unionBuilds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Offset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.Offset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Offset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PreviewBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UIPanel arg0 = (UIPanel)ToLua.CheckUnityObject(L, 2, typeof(UIPanel));
			obj.PreviewBox = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PreviewBox on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PreviewBoxUnit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UITexture arg0 = (UITexture)ToLua.CheckUnityObject(L, 2, typeof(UITexture));
			obj.PreviewBoxUnit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PreviewBoxUnit on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RedTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture2D));
			obj.RedTex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RedTex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GreenTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture2D));
			obj.GreenTex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GreenTex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LayerName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.LayerName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LayerName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsDebug(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsDebug = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsDebug on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unionBuilds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TerrainUnionBuildPreview obj = (TerrainUnionBuildPreview)o;
			TerrainUnionBuildPreview.UnionBuildInfo[] arg0 = ToLua.CheckObjectArray<TerrainUnionBuildPreview.UnionBuildInfo>(L, 2);
			obj.unionBuilds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unionBuilds on a nil value" : e.Message);
		}
	}
}

