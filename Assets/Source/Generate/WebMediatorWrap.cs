//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class WebMediatorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(WebMediator), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetMargin", SetMargin);
		L.RegFunction("Show", Show);
		L.RegFunction("Hide", Hide);
		L.RegFunction("IsVisible", IsVisible);
		L.RegFunction("LoadUrl", LoadUrl);
		L.RegFunction("PollMessage", PollMessage);
		L.RegFunction("MakeTransparentWebViewBackground", MakeTransparentWebViewBackground);
		L.RegFunction("CallJavascript", CallJavascript);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMargin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			obj.SetMargin(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			string arg0 = ToLua.CheckString(L, 2);
			obj.Show(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			System.Action arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action)ToLua.CheckObject(L, 2, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.Hide(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			bool o = obj.IsVisible();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadUrl(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			string arg0 = ToLua.CheckString(L, 2);
			obj.LoadUrl(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PollMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			WebMediatorMessage o = obj.PollMessage();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MakeTransparentWebViewBackground(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			obj.MakeTransparentWebViewBackground();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CallJavascript(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			WebMediator obj = (WebMediator)ToLua.CheckObject(L, 1, typeof(WebMediator));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.CallJavascript(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

