//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_SLGPVP_ScArmyWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.SLGPVP.ScArmy), null);
		L.RegFunction("New", _CreateSerclimax_SLGPVP_ScArmy);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("ID", get_ID, set_ID);
		L.RegVar("Count", get_Count, set_Count);
		L.RegVar("Level", get_Level, set_Level);
		L.RegVar("ArmyType", get_ArmyType, set_ArmyType);
		L.RegVar("PhalanxType", get_PhalanxType, set_PhalanxType);
		L.RegVar("HP", get_HP, set_HP);
		L.RegVar("Attack", get_Attack, set_Attack);
		L.RegVar("Armor", get_Armor, set_Armor);
		L.RegVar("Penetrate", get_Penetrate, set_Penetrate);
		L.RegVar("Fight", get_Fight, set_Fight);
		L.RegVar("Exp", get_Exp, set_Exp);
		L.RegVar("ArmySuperiority", get_ArmySuperiority, set_ArmySuperiority);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_SLGPVP_ScArmy(IntPtr L)
	{
		Serclimax.SLGPVP.ScArmy obj = new Serclimax.SLGPVP.ScArmy();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int ret = obj.ID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int ret = obj.Count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Count on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Level(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int ret = obj.Level;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Level on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArmyType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int ret = obj.ArmyType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PhalanxType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int ret = obj.PhalanxType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PhalanxType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float ret = obj.HP;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Attack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float ret = obj.Attack;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Attack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Armor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float ret = obj.Armor;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Armor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Penetrate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float ret = obj.Penetrate;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Penetrate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Fight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float ret = obj.Fight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Fight on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Exp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float ret = obj.Exp;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Exp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArmySuperiority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float[] ret = obj.ArmySuperiority;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmySuperiority on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ID = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Count = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Count on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Level(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Level = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Level on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ArmyType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ArmyType = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmyType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PhalanxType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.PhalanxType = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PhalanxType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.HP = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Attack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Attack = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Attack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Armor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Armor = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Armor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Penetrate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Penetrate = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Penetrate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Fight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Fight = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Fight on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Exp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Exp = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Exp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ArmySuperiority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScArmy obj = (Serclimax.SLGPVP.ScArmy)o;
			float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
			obj.ArmySuperiority = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ArmySuperiority on a nil value" : e.Message);
		}
	}
}

