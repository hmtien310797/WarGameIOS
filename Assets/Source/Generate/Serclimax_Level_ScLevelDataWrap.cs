//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Level_ScLevelDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Level.ScLevelData), typeof(System.Object));
		L.RegFunction("GetElementDataByUId", GetElementDataByUId);
		L.RegFunction("GetNearestPathTarget", GetNearestPathTarget);
		L.RegFunction("GetGroupCount", GetGroupCount);
		L.RegFunction("GetLastPathTarget", GetLastPathTarget);
		L.RegFunction("GetNearestGroup", GetNearestGroup);
		L.RegFunction("GetPathDataByUId", GetPathDataByUId);
		L.RegFunction("GetPathsDataByGroup", GetPathsDataByGroup);
		L.RegFunction("GetTargetPoint", GetTargetPoint);
		L.RegFunction("LoadLevelData", LoadLevelData);
		L.RegFunction("New", _CreateSerclimax_Level_ScLevelData);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("mLeveId", get_mLeveId, set_mLeveId);
		L.RegVar("mCurFolder", get_mCurFolder, set_mCurFolder);
		L.RegVar("mLevelName", get_mLevelName, set_mLevelName);
		L.RegVar("mLevelEventDataset", get_mLevelEventDataset, set_mLevelEventDataset);
		L.RegVar("mLevelAstar", get_mLevelAstar, set_mLevelAstar);
		L.RegVar("RootSpace", get_RootSpace, set_RootSpace);
		L.RegVar("SpaceMap", get_SpaceMap, set_SpaceMap);
		L.RegVar("SlotNode", get_SlotNode, set_SlotNode);
		L.RegVar("mLevelElementsData", get_mLevelElementsData, set_mLevelElementsData);
		L.RegVar("mLevelPathDatas", get_mLevelPathDatas, set_mLevelPathDatas);
		L.RegVar("mLevelBattleLines", get_mLevelBattleLines, set_mLevelBattleLines);
		L.RegVar("TarckPaths", get_TarckPaths, set_TarckPaths);
		L.RegVar("MinCameraX", get_MinCameraX, set_MinCameraX);
		L.RegVar("MaxCameraX", get_MaxCameraX, set_MaxCameraX);
		L.RegVar("MinCameraZ", get_MinCameraZ, set_MinCameraZ);
		L.RegVar("MaxCameraZ", get_MaxCameraZ, set_MaxCameraZ);
		L.RegVar("MinCameraY", get_MinCameraY, set_MinCameraY);
		L.RegVar("MaxCameraY", get_MaxCameraY, set_MaxCameraY);
		L.RegVar("DicLevelPathTagToKey", get_DicLevelPathTagToKey, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Level_ScLevelData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Level.ScLevelData obj = new Serclimax.Level.ScLevelData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Level.ScLevelData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetElementDataByUId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Level.ScElementData o = obj.GetElementDataByUId(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNearestPathTarget(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Level.ScLevelData), typeof(int), typeof(int), typeof(Serclimax.ScRandom), typeof(string)))
			{
				Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				Serclimax.ScRandom arg2 = (Serclimax.ScRandom)ToLua.ToObject(L, 4);
				string arg3 = ToLua.ToString(L, 5);
				Serclimax.Level.ScPathData o = obj.GetNearestPathTarget(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Level.ScLevelData), typeof(int), typeof(UnityEngine.Vector3), typeof(string), typeof(LuaInterface.LuaOut<int>), typeof(Serclimax.ScRandom)))
			{
				Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				int arg3;
				Serclimax.ScRandom arg4 = (Serclimax.ScRandom)ToLua.ToObject(L, 6);
				Serclimax.Level.ScPathData o = obj.GetNearestPathTarget(arg0, arg1, arg2, out arg3, arg4);
				ToLua.PushObject(L, o);
				LuaDLL.lua_pushinteger(L, arg3);
				return 2;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Serclimax.Level.ScLevelData.GetNearestPathTarget");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGroupCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int o = obj.GetGroupCount(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLastPathTarget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2;
			Serclimax.Level.ScPathData o = obj.GetLastPathTarget(arg0, arg1, out arg2);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushinteger(L, arg2);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNearestGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			int o = obj.GetNearestGroup(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPathDataByUId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			Serclimax.Level.ScPathData o = obj.GetPathDataByUId(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPathsDataByGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			System.Collections.Generic.List<Serclimax.Level.ScPathData> o = obj.GetPathsDataByGroup(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTargetPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Vector3 o = obj.GetTargetPoint(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadLevelData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)ToLua.CheckObject(L, 1, typeof(Serclimax.Level.ScLevelData));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.LoadLevelData(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLeveId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			int ret = obj.mLeveId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLeveId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCurFolder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			string ret = obj.mCurFolder;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCurFolder on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLevelName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			string ret = obj.mLevelName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLevelEventDataset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			Serclimax.Event.ScEventDataset ret = obj.mLevelEventDataset;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelEventDataset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLevelAstar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			Serclimax.NiceAstarPath ret = obj.mLevelAstar;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelAstar on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RootSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			Serclimax.Level.ScLevelSpace ret = obj.RootSpace;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RootSpace on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SpaceMap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Level.ScLevelSpace>> ret = obj.SpaceMap;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SpaceMap on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SlotNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Unit.ScSlotNode>> ret = obj.SlotNode;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SlotNode on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLevelElementsData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,Serclimax.Level.ScElementData> ret = obj.mLevelElementsData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelElementsData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLevelPathDatas(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,Serclimax.Level.ScPathTeamData> ret = obj.mLevelPathDatas;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelPathDatas on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLevelBattleLines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,UnityEngine.Vector3> ret = obj.mLevelBattleLines;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelBattleLines on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TarckPaths(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.List<Serclimax.Unit.ScTrackPath> ret = obj.TarckPaths;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TarckPaths on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MinCameraX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float ret = obj.MinCameraX;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinCameraX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxCameraX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float ret = obj.MaxCameraX;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCameraX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MinCameraZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float ret = obj.MinCameraZ;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinCameraZ on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxCameraZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float ret = obj.MaxCameraZ;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCameraZ on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MinCameraY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float ret = obj.MinCameraY;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinCameraY on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxCameraY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float ret = obj.MaxCameraY;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCameraY on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DicLevelPathTagToKey(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<string,int> ret = obj.DicLevelPathTagToKey;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DicLevelPathTagToKey on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLeveId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.mLeveId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLeveId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCurFolder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.mCurFolder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCurFolder on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLevelName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.mLevelName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLevelEventDataset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			Serclimax.Event.ScEventDataset arg0 = (Serclimax.Event.ScEventDataset)ToLua.CheckObject(L, 2, typeof(Serclimax.Event.ScEventDataset));
			obj.mLevelEventDataset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelEventDataset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLevelAstar(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			Serclimax.NiceAstarPath arg0 = (Serclimax.NiceAstarPath)ToLua.CheckObject(L, 2, typeof(Serclimax.NiceAstarPath));
			obj.mLevelAstar = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelAstar on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RootSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			Serclimax.Level.ScLevelSpace arg0 = (Serclimax.Level.ScLevelSpace)ToLua.CheckObject(L, 2, typeof(Serclimax.Level.ScLevelSpace));
			obj.RootSpace = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RootSpace on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SpaceMap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Level.ScLevelSpace>> arg0 = (System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Level.ScLevelSpace>>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Level.ScLevelSpace>>));
			obj.SpaceMap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SpaceMap on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SlotNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Unit.ScSlotNode>> arg0 = (System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Unit.ScSlotNode>>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,System.Collections.Generic.List<Serclimax.Unit.ScSlotNode>>));
			obj.SlotNode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SlotNode on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLevelElementsData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,Serclimax.Level.ScElementData> arg0 = (System.Collections.Generic.Dictionary<int,Serclimax.Level.ScElementData>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,Serclimax.Level.ScElementData>));
			obj.mLevelElementsData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelElementsData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLevelPathDatas(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,Serclimax.Level.ScPathTeamData> arg0 = (System.Collections.Generic.Dictionary<int,Serclimax.Level.ScPathTeamData>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,Serclimax.Level.ScPathTeamData>));
			obj.mLevelPathDatas = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelPathDatas on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLevelBattleLines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.Dictionary<int,UnityEngine.Vector3> arg0 = (System.Collections.Generic.Dictionary<int,UnityEngine.Vector3>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,UnityEngine.Vector3>));
			obj.mLevelBattleLines = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLevelBattleLines on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TarckPaths(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			System.Collections.Generic.List<Serclimax.Unit.ScTrackPath> arg0 = (System.Collections.Generic.List<Serclimax.Unit.ScTrackPath>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.Unit.ScTrackPath>));
			obj.TarckPaths = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TarckPaths on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MinCameraX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.MinCameraX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinCameraX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxCameraX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxCameraX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCameraX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MinCameraZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.MinCameraZ = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinCameraZ on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxCameraZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxCameraZ = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCameraZ on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MinCameraY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.MinCameraY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinCameraY on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxCameraY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Level.ScLevelData obj = (Serclimax.Level.ScLevelData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxCameraY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCameraY on a nil value" : e.Message);
		}
	}
}

