//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Battle_ScBattleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Battle.ScBattle), typeof(System.Object));
		L.RegFunction("GetPVPTeam", GetPVPTeam);
		L.RegFunction("Clear", Clear);
		L.RegFunction("Pause", Pause);
		L.RegFunction("EnableRootUpdate", EnableRootUpdate);
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("RLateUpdate", RLateUpdate);
		L.RegFunction("RUpdate", RUpdate);
		L.RegFunction("Start", Start);
		L.RegFunction("OnSceneLoadFinished", OnSceneLoadFinished);
		L.RegFunction("RequestCast", RequestCast);
		L.RegFunction("RequestCast2RedCmd", RequestCast2RedCmd);
		L.RegFunction("RequestCast4RedCmd", RequestCast4RedCmd);
		L.RegFunction("OnTitleFinished", OnTitleFinished);
		L.RegFunction("StartBattle", StartBattle);
		L.RegFunction("ChangeStatus", ChangeStatus);
		L.RegFunction("ClearMsg", ClearMsg);
		L.RegFunction("SetBullet", SetBullet);
		L.RegFunction("SetEnergy", SetEnergy);
		L.RegFunction("SetMaxPopulation", SetMaxPopulation);
		L.RegFunction("SetSkillCooldown", SetSkillCooldown);
		L.RegFunction("SetAllSkillCooldown", SetAllSkillCooldown);
		L.RegFunction("SetArmyCooldown", SetArmyCooldown);
		L.RegFunction("SetAllArmyCooldown", SetAllArmyCooldown);
		L.RegFunction("SetAllCooldown", SetAllCooldown);
		L.RegFunction("SetAmryMaxID", SetAmryMaxID);
		L.RegFunction("GetArmyMaxID", GetArmyMaxID);
		L.RegFunction("SetNoCooldown", SetNoCooldown);
		L.RegFunction("SetInvincible", SetInvincible);
		L.RegFunction("New", _CreateSerclimax_Battle_ScBattle);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("startInfo", get_startInfo, set_startInfo);
		L.RegVar("battleInfo", get_battleInfo, set_battleInfo);
		L.RegVar("GetScPlayer", get_GetScPlayer, null);
		L.RegVar("CollectorMgr", get_CollectorMgr, null);
		L.RegVar("ElapsedTime", get_ElapsedTime, null);
		L.RegVar("Status", get_Status, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Battle_ScBattle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Battle.ScBattle obj = new Serclimax.Battle.ScBattle();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Battle.ScBattle.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPVPTeam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.GetPVPTeam(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Pause(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableRootUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			bool o = obj.EnableRootUpdate();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			Serclimax.ScRoot arg0 = (Serclimax.ScRoot)ToLua.CheckObject(L, 2, typeof(Serclimax.ScRoot));
			obj.Initialize(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.RLateUpdate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.RUpdate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			obj.Start();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSceneLoadFinished(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			obj.OnSceneLoadFinished();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestCast(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			obj.RequestCast(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestCast2RedCmd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			string o = obj.RequestCast2RedCmd(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RequestCast4RedCmd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			string arg0 = ToLua.CheckString(L, 2);
			obj.RequestCast4RedCmd(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTitleFinished(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			obj.OnTitleFinished();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			Serclimax.Battle.ScBattleStartInfo arg0 = (Serclimax.Battle.ScBattleStartInfo)ToLua.CheckObject(L, 2, typeof(Serclimax.Battle.ScBattleStartInfo));
			obj.StartBattle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeStatus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			Serclimax.Battle.ScBattleStatus arg0 = (Serclimax.Battle.ScBattleStatus)ToLua.CheckObject(L, 2, typeof(Serclimax.Battle.ScBattleStatus));
			obj.ChangeStatus(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			obj.ClearMsg();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetBullet(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetBullet(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetEnergy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetEnergy(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaxPopulation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetMaxPopulation(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSkillCooldown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetSkillCooldown(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAllSkillCooldown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetAllSkillCooldown(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetArmyCooldown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetArmyCooldown(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAllArmyCooldown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetAllArmyCooldown(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAllCooldown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetAllCooldown(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAmryMaxID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetAmryMaxID(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetArmyMaxID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.GetArmyMaxID(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetNoCooldown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			obj.SetNoCooldown();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInvincible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)ToLua.CheckObject(L, 1, typeof(Serclimax.Battle.ScBattle));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetInvincible(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			Serclimax.Battle.ScBattleStartInfo ret = obj.startInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index startInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_battleInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			Serclimax.Battle.ScBattleInfo ret = obj.battleInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index battleInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GetScPlayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			Serclimax.Player.ScPlayer ret = obj.GetScPlayer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GetScPlayer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CollectorMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			Serclimax.ScCollectorMgr ret = obj.CollectorMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CollectorMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ElapsedTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			float ret = obj.ElapsedTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ElapsedTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Status(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			Serclimax.Battle.ScBattleStatus ret = obj.Status;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Status on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			Serclimax.Battle.ScBattleStartInfo arg0 = (Serclimax.Battle.ScBattleStartInfo)ToLua.CheckObject(L, 2, typeof(Serclimax.Battle.ScBattleStartInfo));
			obj.startInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index startInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_battleInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Battle.ScBattle obj = (Serclimax.Battle.ScBattle)o;
			Serclimax.Battle.ScBattleInfo arg0 = (Serclimax.Battle.ScBattleInfo)ToLua.CheckObject(L, 2, typeof(Serclimax.Battle.ScBattleInfo));
			obj.battleInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index battleInfo on a nil value" : e.Message);
		}
	}
}

