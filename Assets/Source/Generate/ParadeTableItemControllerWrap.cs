//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ParadeTableItemControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ParadeTableItemController), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Reset", Reset);
		L.RegFunction("SetItemOpenHeight", SetItemOpenHeight);
		L.RegFunction("CalAutoHight", CalAutoHight);
		L.RegFunction("OnClickOpen", OnClickOpen);
		L.RegFunction("TableOpenFinish", TableOpenFinish);
		L.RegFunction("IsTableActive", IsTableActive);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("AutoHightRoot", get_AutoHightRoot, set_AutoHightRoot);
		L.RegVar("RootUnitHight", get_RootUnitHight, set_RootUnitHight);
		L.RegVar("AutoAdjustHightWidgets", get_AutoAdjustHightWidgets, set_AutoAdjustHightWidgets);
		L.RegVar("AutoAdjustWidgetOffsets", get_AutoAdjustWidgetOffsets, set_AutoAdjustWidgetOffsets);
		L.RegVar("AutoHightRootOffset", get_AutoHightRootOffset, set_AutoHightRootOffset);
		L.RegVar("isActive", get_isActive, set_isActive);
		L.RegVar("finishCallback", get_finishCallback, set_finishCallback);
		L.RegFunction("FinishCallback", ParadeTableItemController_FinishCallback);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)ToLua.CheckObject(L, 1, typeof(ParadeTableItemController));
			obj.Reset();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetItemOpenHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ParadeTableItemController obj = (ParadeTableItemController)ToLua.CheckObject(L, 1, typeof(ParadeTableItemController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetItemOpenHeight(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalAutoHight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)ToLua.CheckObject(L, 1, typeof(ParadeTableItemController));
			obj.CalAutoHight();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClickOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)ToLua.CheckObject(L, 1, typeof(ParadeTableItemController));
			obj.OnClickOpen();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TableOpenFinish(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)ToLua.CheckObject(L, 1, typeof(ParadeTableItemController));
			obj.TableOpenFinish();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsTableActive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)ToLua.CheckObject(L, 1, typeof(ParadeTableItemController));
			bool o = obj.IsTableActive();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoHightRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			UnityEngine.Transform ret = obj.AutoHightRoot;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoHightRoot on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RootUnitHight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			int ret = obj.RootUnitHight;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RootUnitHight on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoAdjustHightWidgets(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			UIWidget[] ret = obj.AutoAdjustHightWidgets;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoAdjustHightWidgets on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoAdjustWidgetOffsets(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			int[] ret = obj.AutoAdjustWidgetOffsets;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoAdjustWidgetOffsets on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoHightRootOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			int ret = obj.AutoHightRootOffset;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoHightRootOffset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			bool ret = obj.isActive;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isActive on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_finishCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			ParadeTableItemController.FinishCallback ret = obj.finishCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index finishCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoHightRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.AutoHightRoot = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoHightRoot on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RootUnitHight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RootUnitHight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RootUnitHight on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoAdjustHightWidgets(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			UIWidget[] arg0 = ToLua.CheckObjectArray<UIWidget>(L, 2);
			obj.AutoAdjustHightWidgets = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoAdjustHightWidgets on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoAdjustWidgetOffsets(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			obj.AutoAdjustWidgetOffsets = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoAdjustWidgetOffsets on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoHightRootOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.AutoHightRootOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AutoHightRootOffset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isActive = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isActive on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_finishCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ParadeTableItemController obj = (ParadeTableItemController)o;
			ParadeTableItemController.FinishCallback arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (ParadeTableItemController.FinishCallback)ToLua.CheckObject(L, 2, typeof(ParadeTableItemController.FinishCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(ParadeTableItemController.FinishCallback), func) as ParadeTableItemController.FinishCallback;
			}

			obj.finishCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index finishCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ParadeTableItemController_FinishCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(ParadeTableItemController.FinishCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

