//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_SLGPVP_ScSLGPlayerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.SLGPVP.ScSLGPlayer), typeof(System.Object));
		L.RegFunction("ToFormationString", ToFormationString);
		L.RegFunction("GetKill", GetKill);
		L.RegFunction("GetTotalArmy", GetTotalArmy);
		L.RegFunction("GetInjuredNum", GetInjuredNum);
		L.RegFunction("CalRevertNumWithRate", CalRevertNumWithRate);
		L.RegFunction("CalInjuredNum", CalInjuredNum);
		L.RegFunction("ToLuaString", ToLuaString);
		L.RegFunction("New", _CreateSerclimax_SLGPVP_ScSLGPlayer);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("uid", get_uid, set_uid);
		L.RegVar("pathId", get_pathId, set_pathId);
		L.RegVar("name", get_name, set_name);
		L.RegVar("icon", get_icon, set_icon);
		L.RegVar("level", get_level, set_level);
		L.RegVar("IsSponsor", get_IsSponsor, set_IsSponsor);
		L.RegVar("HadCommander", get_HadCommander, set_HadCommander);
		L.RegVar("SupportRevert", get_SupportRevert, set_SupportRevert);
		L.RegVar("IsDefend", get_IsDefend, set_IsDefend);
		L.RegVar("InjuredNum", get_InjuredNum, set_InjuredNum);
		L.RegVar("DeadNumWithRate", get_DeadNumWithRate, set_DeadNumWithRate);
		L.RegVar("TotalRevertCount", get_TotalRevertCount, set_TotalRevertCount);
		L.RegVar("Formation", get_Formation, set_Formation);
		L.RegVar("Armys", get_Armys, set_Armys);
		L.RegVar("Heros", get_Heros, set_Heros);
		L.RegVar("Accounts", get_Accounts, set_Accounts);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_SLGPVP_ScSLGPlayer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.SLGPVP.ScSLGPlayer obj = new Serclimax.SLGPVP.ScSLGPlayer();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.SLGPVP.ScSLGPlayer.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToFormationString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPlayer));
			string o = obj.ToFormationString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetKill(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPlayer));
			long o = obj.GetKill();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTotalArmy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPlayer));
			long o = obj.GetTotalArmy();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInjuredNum(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPlayer));
			int o = obj.GetInjuredNum();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalRevertNumWithRate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPlayer));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			string o = obj.CalRevertNumWithRate(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalInjuredNum(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPlayer));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int o = obj.CalInjuredNum(arg0, ref arg1);
			LuaDLL.lua_pushinteger(L, o);
			LuaDLL.lua_pushstring(L, arg1);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToLuaString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)ToLua.CheckObject(L, 1, typeof(Serclimax.SLGPVP.ScSLGPlayer));
			string o = obj.ToLuaString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint ret = obj.uid;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index uid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pathId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint ret = obj.pathId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pathId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_icon(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint ret = obj.icon;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index icon on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_level(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint ret = obj.level;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index level on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsSponsor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int ret = obj.IsSponsor;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsSponsor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HadCommander(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int ret = obj.HadCommander;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HadCommander on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SupportRevert(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int ret = obj.SupportRevert;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SupportRevert on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsDefend(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int ret = obj.IsDefend;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsDefend on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InjuredNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint ret = obj.InjuredNum;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InjuredNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DeadNumWithRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint ret = obj.DeadNumWithRate;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DeadNumWithRate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TotalRevertCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			long ret = obj.TotalRevertCount;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TotalRevertCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Formation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int[] ret = obj.Formation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Formation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Armys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			Serclimax.SLGPVP.ScArmy[] ret = obj.Armys;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Armys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Heros(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			Serclimax.SLGPVP.ScSLGPVPHero[] ret = obj.Heros;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Heros on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Accounts(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGAccount> ret = obj.Accounts;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Accounts on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.uid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index uid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pathId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.pathId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pathId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_icon(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.icon = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index icon on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_level(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.level = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index level on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsSponsor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.IsSponsor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsSponsor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HadCommander(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.HadCommander = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HadCommander on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SupportRevert(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SupportRevert = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SupportRevert on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsDefend(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.IsDefend = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsDefend on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_InjuredNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.InjuredNum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InjuredNum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DeadNumWithRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.DeadNumWithRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DeadNumWithRate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TotalRevertCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			obj.TotalRevertCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TotalRevertCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Formation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			obj.Formation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Formation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Armys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			Serclimax.SLGPVP.ScArmy[] arg0 = ToLua.CheckObjectArray<Serclimax.SLGPVP.ScArmy>(L, 2);
			obj.Armys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Armys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Heros(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			Serclimax.SLGPVP.ScSLGPVPHero[] arg0 = ToLua.CheckObjectArray<Serclimax.SLGPVP.ScSLGPVPHero>(L, 2);
			obj.Heros = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Heros on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Accounts(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.SLGPVP.ScSLGPlayer obj = (Serclimax.SLGPVP.ScSLGPlayer)o;
			System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGAccount> arg0 = (System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGAccount>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.SLGPVP.ScSLGAccount>));
			obj.Accounts = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Accounts on a nil value" : e.Message);
		}
	}
}

