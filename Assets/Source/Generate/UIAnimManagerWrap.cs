//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIAnimManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIAnimManager), typeof(System.Object));
		L.RegFunction("IncreaseUILabelTextAnim", IncreaseUILabelTextAnim);
		L.RegFunction("AddUILabelTextAnim", AddUILabelTextAnim);
		L.RegFunction("AddUIProgressBarAnim", AddUIProgressBarAnim);
		L.RegFunction("New", _CreateUIAnimManager);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("instance", get_instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUIAnimManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UIAnimManager obj = new UIAnimManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UIAnimManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IncreaseUILabelTextAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UIAnimManager obj = (UIAnimManager)ToLua.CheckObject(L, 1, typeof(UIAnimManager));
			UILabel arg0 = (UILabel)ToLua.CheckUnityObject(L, 2, typeof(UILabel));
			long arg1 = (long)LuaDLL.luaL_checknumber(L, 3);
			long arg2 = (long)LuaDLL.luaL_checknumber(L, 4);
			obj.IncreaseUILabelTextAnim(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUILabelTextAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			UIAnimManager obj = (UIAnimManager)ToLua.CheckObject(L, 1, typeof(UIAnimManager));
			UILabel arg0 = (UILabel)ToLua.CheckUnityObject(L, 2, typeof(UILabel));
			long arg1 = (long)LuaDLL.luaL_checknumber(L, 3);
			long arg2 = (long)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			string arg4 = ToLua.CheckString(L, 6);
			string arg5 = ToLua.CheckString(L, 7);
			UILabelAnimController o = obj.AddUILabelTextAnim(arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUIProgressBarAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			UIAnimManager obj = (UIAnimManager)ToLua.CheckObject(L, 1, typeof(UIAnimManager));
			UIProgressBar arg0 = (UIProgressBar)ToLua.CheckUnityObject(L, 2, typeof(UIProgressBar));
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			UIPBAnimController o = obj.AddUIProgressBarAnim(arg0, arg1, arg2, arg3, arg4);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, UIAnimManager.instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

