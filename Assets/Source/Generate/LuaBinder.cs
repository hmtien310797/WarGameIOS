//this source code was auto-generated by tolua#, do not modify it
using System;
using UnityEngine;
using LuaInterface;

public static class LuaBinder
{
	public static void Bind(LuaState L)
	{
		float t = Time.realtimeSinceStartup;
		L.BeginModule(null);
		DebuggerWrap.Register(L);
		iTweenWrap.Register(L);
		GameVersionWrap.Register(L);
		MainWrap.Register(L);
		GameStateLoginWrap.Register(L);
		GameStateBattleWrap.Register(L);
		GameStateMainWrap.Register(L);
		GameStateTutorialWrap.Register(L);
		GameStateSLGBattleWrap.Register(L);
		GameStateNullWrap.Register(L);
		ResourceUnloadWrap.Register(L);
		GuideManagerWrap.Register(L);
		GUIMgrWrap.Register(L);
		SceneManagerWrap.Register(L);
		ControllerWrap.Register(L);
		ResourceLibraryWrap.Register(L);
		TextManagerWrap.Register(L);
		WorldMapMgrWrap.Register(L);
		PreViewAnimationWrap.Register(L);
		GameSettingWrap.Register(L);
		LuaNetworkWrap.Register(L);
		CountDownWrap.Register(L);
		AudioManagerWrap.Register(L);
		UIAnimManagerWrap.Register(L);
		AssetBundleManagerWrap.Register(L);
		TiledMapWrap.Register(L);
		MainlandWrap.Register(L);
		WebMediatorWrap.Register(L);
		PPGameLoginToolWrap.Register(L);
		BuglyAgentWrap.Register(L);
		LuaBehaviourWrap.Register(L);
		UICameraWrap.Register(L);
		UIRectWrap.Register(L);
		UIRootWrap.Register(L);
		UIPanelWrap.Register(L);
		UIWidgetWrap.Register(L);
		UIButtonWrap.Register(L);
		UILabelWrap.Register(L);
		UITextListWrap.Register(L);
		UISpriteWrap.Register(L);
		UITextureWrap.Register(L);
		UISliderWrap.Register(L);
		UIGridWrap.Register(L);
		UIScrollViewWrap.Register(L);
		UIScrollBarWrap.Register(L);
		UIInputWrap.Register(L);
		UIViewportWrap.Register(L);
		UIToggleWrap.Register(L);
		UIToggledObjectsWrap.Register(L);
		UICenterOnChildWrap.Register(L);
		UICenterOnClickWrap.Register(L);
		UITableWrap.Register(L);
		UIWrapContentWrap.Register(L);
		UIEventListenerWrap.Register(L);
		EventDelegateWrap.Register(L);
		UITweenerWrap.Register(L);
		TweenScaleWrap.Register(L);
		TweenAlphaWrap.Register(L);
		TweenColorWrap.Register(L);
		TweenPositionWrap.Register(L);
		TweenRotationWrap.Register(L);
		TweenTransformWrap.Register(L);
		TweenHeightWrap.Register(L);
		UIPlayTweenWrap.Register(L);
		UIPlayAnimationWrap.Register(L);
		NGUIToolsWrap.Register(L);
		NGUIMathWrap.Register(L);
		UISliderOnChangeEventWrap.Register(L);
		UIHoldClickWrap.Register(L);
		UITexture2GrayControllerWrap.Register(L);
		UILabel2GrayControllerWrap.Register(L);
		CustomSortUIGridWrap.Register(L);
		UISoundWrap.Register(L);
		ParadeTableItemControllerWrap.Register(L);
		AnimColltrollerWrap.Register(L);
		UIPressSelectedWrap.Register(L);
		Particle2DWrap.Register(L);
		UIDragScrollViewWrap.Register(L);
		TypewriterEffectWrap.Register(L);
		SpringPanelControllerWrap.Register(L);
		UISpringPanelWrap.Register(L);
		GameEnviromentWrap.Register(L);
		HeroBuffShowInfoWrap.Register(L);
		BeatTextControllerWrap.Register(L);
		PlaneShadowWrap.Register(L);
		UIAtlasAnimWrap.Register(L);
		BorderDataWrap.Register(L);
		TerrainUnionBuildPreviewWrap.Register(L);
		WorldHUDMgrWrap.Register(L);
		GameStateWrap.Register(L);
		State_GameStateWrap.Register(L);
		UIButtonColorWrap.Register(L);
		UIWidgetContainerWrap.Register(L);
		UIBasicSpriteWrap.Register(L);
		UIProgressBarWrap.Register(L);
		L.BeginModule("UnityEngine");
		UnityEngine_ComponentWrap.Register(L);
		UnityEngine_TransformWrap.Register(L);
		UnityEngine_MaterialWrap.Register(L);
		UnityEngine_LightWrap.Register(L);
		UnityEngine_RigidbodyWrap.Register(L);
		UnityEngine_CameraWrap.Register(L);
		UnityEngine_AudioSourceWrap.Register(L);
		UnityEngine_BehaviourWrap.Register(L);
		UnityEngine_MonoBehaviourWrap.Register(L);
		UnityEngine_GameObjectWrap.Register(L);
		UnityEngine_ApplicationWrap.Register(L);
		UnityEngine_PhysicsWrap.Register(L);
		UnityEngine_ColliderWrap.Register(L);
		UnityEngine_TimeWrap.Register(L);
		UnityEngine_TextureWrap.Register(L);
		UnityEngine_Texture2DWrap.Register(L);
		UnityEngine_ShaderWrap.Register(L);
		UnityEngine_RendererWrap.Register(L);
		UnityEngine_WWWWrap.Register(L);
		UnityEngine_ScreenWrap.Register(L);
		UnityEngine_CameraClearFlagsWrap.Register(L);
		UnityEngine_AudioClipWrap.Register(L);
		UnityEngine_AssetBundleWrap.Register(L);
		UnityEngine_ParticleSystemWrap.Register(L);
		UnityEngine_AsyncOperationWrap.Register(L);
		UnityEngine_LightTypeWrap.Register(L);
		UnityEngine_SleepTimeoutWrap.Register(L);
		UnityEngine_AnimatorWrap.Register(L);
		UnityEngine_InputWrap.Register(L);
		UnityEngine_KeyCodeWrap.Register(L);
		UnityEngine_SpaceWrap.Register(L);
		UnityEngine_BoxColliderWrap.Register(L);
		UnityEngine_SphereColliderWrap.Register(L);
		UnityEngine_AnimationWrap.Register(L);
		UnityEngine_AnimationClipWrap.Register(L);
		UnityEngine_AnimationStateWrap.Register(L);
		UnityEngine_AnimationBlendModeWrap.Register(L);
		UnityEngine_QueueModeWrap.Register(L);
		UnityEngine_PlayModeWrap.Register(L);
		UnityEngine_WrapModeWrap.Register(L);
		UnityEngine_QualitySettingsWrap.Register(L);
		UnityEngine_RenderSettingsWrap.Register(L);
		UnityEngine_BlendWeightsWrap.Register(L);
		UnityEngine_RenderTextureWrap.Register(L);
		UnityEngine_PrimitiveTypeWrap.Register(L);
		UnityEngine_DebugWrap.Register(L);
		UnityEngine_RandomWrap.Register(L);
		UnityEngine_PlayerPrefsWrap.Register(L);
		UnityEngine_AnimatorOverrideControllerWrap.Register(L);
		UnityEngine_AnimationClipPairWrap.Register(L);
		UnityEngine_AnimationCullingTypeWrap.Register(L);
		UnityEngine_AnimatorUpdateModeWrap.Register(L);
		UnityEngine_AnimatorStateInfoWrap.Register(L);
		UnityEngine_TextMeshWrap.Register(L);
		UnityEngine_TextEditorWrap.Register(L);
		UnityEngine_TrackedReferenceWrap.Register(L);
		UnityEngine_RuntimeAnimatorControllerWrap.Register(L);
		L.BeginModule("Experimental");
		L.BeginModule("Director");
		UnityEngine_Experimental_Director_DirectorPlayerWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("Events");
		L.RegFunction("UnityAction", UnityEngine_Events_UnityAction);
		L.EndModule();
		L.EndModule();
		L.BeginModule("System");
		L.RegFunction("Action", System_Action);
		L.RegFunction("Predicate_UnityEngine_Vector3", System_Predicate_UnityEngine_Vector3);
		L.RegFunction("Action_UnityEngine_Vector3", System_Action_UnityEngine_Vector3);
		L.RegFunction("Comparison_UnityEngine_Vector3", System_Comparison_UnityEngine_Vector3);
		L.RegFunction("Predicate_EventDelegate", System_Predicate_EventDelegate);
		L.RegFunction("Action_EventDelegate", System_Action_EventDelegate);
		L.RegFunction("Comparison_EventDelegate", System_Comparison_EventDelegate);
		L.RegFunction("Predicate_UIAtlas", System_Predicate_UIAtlas);
		L.RegFunction("Action_UIAtlas", System_Action_UIAtlas);
		L.RegFunction("Comparison_UIAtlas", System_Comparison_UIAtlas);
		L.RegFunction("Func_System_Collections_Generic_Dictionary_string_string", System_Func_System_Collections_Generic_Dictionary_string_string);
		L.RegFunction("Comparison_UnityEngine_Transform", System_Comparison_UnityEngine_Transform);
		L.RegFunction("Predicate_UnityEngine_GameObject", System_Predicate_UnityEngine_GameObject);
		L.RegFunction("Action_UnityEngine_GameObject", System_Action_UnityEngine_GameObject);
		L.RegFunction("Comparison_UnityEngine_GameObject", System_Comparison_UnityEngine_GameObject);
		L.RegFunction("Predicate_UnityEngine_Transform", System_Predicate_UnityEngine_Transform);
		L.RegFunction("Action_UnityEngine_Transform", System_Action_UnityEngine_Transform);
		L.RegFunction("Predicate_Serclimax_Battle_ScBattleDropMsg_DropItem", System_Predicate_Serclimax_Battle_ScBattleDropMsg_DropItem);
		L.RegFunction("Action_Serclimax_Battle_ScBattleDropMsg_DropItem", System_Action_Serclimax_Battle_ScBattleDropMsg_DropItem);
		L.RegFunction("Comparison_Serclimax_Battle_ScBattleDropMsg_DropItem", System_Comparison_Serclimax_Battle_ScBattleDropMsg_DropItem);
		L.RegFunction("Predicate_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo", System_Predicate_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo);
		L.RegFunction("Action_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo", System_Action_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo);
		L.RegFunction("Comparison_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo", System_Comparison_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo);
		L.RegFunction("Predicate_Serclimax_Player_ScPlayerInfoMsg_SkillInfo", System_Predicate_Serclimax_Player_ScPlayerInfoMsg_SkillInfo);
		L.RegFunction("Action_Serclimax_Player_ScPlayerInfoMsg_SkillInfo", System_Action_Serclimax_Player_ScPlayerInfoMsg_SkillInfo);
		L.RegFunction("Comparison_Serclimax_Player_ScPlayerInfoMsg_SkillInfo", System_Comparison_Serclimax_Player_ScPlayerInfoMsg_SkillInfo);
		L.RegFunction("Predicate_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo", System_Predicate_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo);
		L.RegFunction("Action_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo", System_Action_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo);
		L.RegFunction("Comparison_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo", System_Comparison_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo);
		L.RegFunction("Predicate_bytes", System_Predicate_bytes);
		L.RegFunction("Action_bytes", System_Action_bytes);
		L.RegFunction("Comparison_bytes", System_Comparison_bytes);
		L.RegFunction("Action_long_uint", System_Action_long_uint);
		L.BeginModule("Collections");
		L.BeginModule("Generic");
		System_Collections_Generic_Dictionary_string_stringWrap.Register(L);
		System_Collections_Generic_KeyValuePair_string_stringWrap.Register(L);
		System_Collections_Generic_List_UnityEngine_Vector3Wrap.Register(L);
		System_Collections_Generic_List_EventDelegateWrap.Register(L);
		System_Collections_Generic_Dictionary_int_Controller_MouseOrTouchWrap.Register(L);
		System_Collections_Generic_List_UIAtlasWrap.Register(L);
		System_Collections_Generic_List_UnityEngine_GameObjectWrap.Register(L);
		System_Collections_Generic_List_UnityEngine_TransformWrap.Register(L);
		System_Collections_Generic_List_Serclimax_Battle_ScBattleDropMsg_DropItemWrap.Register(L);
		System_Collections_Generic_List_Serclimax_Player_ScPlayerInfoMsg_ArmyInfoWrap.Register(L);
		System_Collections_Generic_List_Serclimax_Player_ScPlayerInfoMsg_SkillInfoWrap.Register(L);
		System_Collections_Generic_List_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfoWrap.Register(L);
		System_Collections_Generic_List_bytesWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("Text");
		System_Text_EncodingWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("GameStateLogin");
		GameStateLogin_EInitStateWrap.Register(L);
		L.RegFunction("OnSDKBind", GameStateLogin_OnSDKBind);
		L.EndModule();
		L.BeginModule("TextManager");
		TextManager_LANGUAGEWrap.Register(L);
		L.EndModule();
		L.BeginModule("GameSetting");
		GameSetting_ESavingTypeWrap.Register(L);
		GameSetting_OptionDataWrap.Register(L);
		L.RegFunction("NoticeSaveOptionsCallBake", GameSetting_NoticeSaveOptionsCallBake);
		L.EndModule();
		L.BeginModule("Serclimax");
		Serclimax_UtilsWrap.Register(L);
		Serclimax_ScDataWrap.Register(L);
		Serclimax_ScTableMgrWrap.Register(L);
		Serclimax_ScGlobalDataIdWrap.Register(L);
		Serclimax_ScGlobalDataWrap.Register(L);
		Serclimax_ConstantsWrap.Register(L);
		Serclimax_GameTimeWrap.Register(L);
		Serclimax_ScRootWrap.Register(L);
		Serclimax_ScBuildingReviewDataWrap.Register(L);
		Serclimax_ScEntityWrap.Register(L);
		L.BeginModule("Level");
		Serclimax_Level_ScLevelDataWrap.Register(L);
		L.EndModule();
		L.BeginModule("Unit");
		Serclimax_Unit_ScUnitMgrWrap.Register(L);
		Serclimax_Unit_ScUnitWrap.Register(L);
		Serclimax_Unit_ScUnitAttributeWrap.Register(L);
		Serclimax_Unit_ScSoldierAttributeWrap.Register(L);
		Serclimax_Unit_ScBulidAttributeWrap.Register(L);
		Serclimax_Unit_ScUnitBonusWrap.Register(L);
		Serclimax_Unit_ScUnitDefenseCoefWrap.Register(L);
		Serclimax_Unit_ScUnitDefenseDataWrap.Register(L);
		L.EndModule();
		L.BeginModule("Player");
		Serclimax_Player_ScPlayerWrap.Register(L);
		Serclimax_Player_ScPlayerInfoMsgWrap.Register(L);
		Serclimax_Player_ScPlayerUpdateMsgWrap.Register(L);
		Serclimax_Player_ScDropUpdateMsgWrap.Register(L);
		Serclimax_Player_ScCastSkillMsgWrap.Register(L);
		L.BeginModule("ScPlayerInfoMsg");
		Serclimax_Player_ScPlayerInfoMsg_ArmyInfoWrap.Register(L);
		Serclimax_Player_ScPlayerInfoMsg_SkillInfoWrap.Register(L);
		L.EndModule();
		L.BeginModule("ScCastSkillMsg");
		Serclimax_Player_ScCastSkillMsg_SkillUpdateInfoWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("Battle");
		Serclimax_Battle_ScBattleWrap.Register(L);
		Serclimax_Battle_ScBattleStatusWrap.Register(L);
		Serclimax_Battle_ScBattleStatusMsgWrap.Register(L);
		Serclimax_Battle_ScBattleInfoMsgWrap.Register(L);
		Serclimax_Battle_ScBattleUpdateMsgWrap.Register(L);
		Serclimax_Battle_ScBattleDropMsgWrap.Register(L);
		L.BeginModule("ScBattleDropMsg");
		Serclimax_Battle_ScBattleDropMsg_DropItemWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("SLGPVP");
		Serclimax_SLGPVP_ScArmyWrap.Register(L);
		Serclimax_SLGPVP_ScSLGPlayerWrap.Register(L);
		Serclimax_SLGPVP_ScSLGPVPHeroWrap.Register(L);
		Serclimax_SLGPVP_ScSLGPvPWrap.Register(L);
		Serclimax_SLGPVP_ScSLGCampWrap.Register(L);
		Serclimax_SLGPVP_ScSLGPVPResultWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("Clishow");
		Clishow_CsBatchMgrWrap.Register(L);
		Clishow_CsUnitMgrWrap.Register(L);
		Clishow_CsUnitAttrWrap.Register(L);
		Clishow_CsUnitWrap.Register(L);
		Clishow_CsBattleWrap.Register(L);
		Clishow_CsSingletonBehaviour_AudioManagerWrap.Register(L);
		Clishow_CsSingletonBehaviour_Clishow_CsUnitMgrWrap.Register(L);
		Clishow_CsSingletonBehaviour_Clishow_CsBattleWrap.Register(L);
		L.EndModule();
		L.BeginModule("UICamera");
		UICamera_MouseOrTouchWrap.Register(L);
		L.RegFunction("GetKeyStateFunc", UICamera_GetKeyStateFunc);
		L.RegFunction("GetAxisFunc", UICamera_GetAxisFunc);
		L.RegFunction("GetAnyKeyFunc", UICamera_GetAnyKeyFunc);
		L.RegFunction("OnScreenResize", UICamera_OnScreenResize);
		L.RegFunction("OnCustomInput", UICamera_OnCustomInput);
		L.RegFunction("OnSchemeChange", UICamera_OnSchemeChange);
		L.RegFunction("VoidDelegate", UICamera_VoidDelegate);
		L.RegFunction("BoolDelegate", UICamera_BoolDelegate);
		L.RegFunction("FloatDelegate", UICamera_FloatDelegate);
		L.RegFunction("VectorDelegate", UICamera_VectorDelegate);
		L.RegFunction("ObjectDelegate", UICamera_ObjectDelegate);
		L.RegFunction("KeyCodeDelegate", UICamera_KeyCodeDelegate);
		L.RegFunction("MoveDelegate", UICamera_MoveDelegate);
		L.RegFunction("GetTouchCountCallback", UICamera_GetTouchCountCallback);
		L.RegFunction("GetTouchCallback", UICamera_GetTouchCallback);
		L.EndModule();
		L.BeginModule("UIButtonColor");
		UIButtonColor_StateWrap.Register(L);
		L.EndModule();
		L.BeginModule("UIScrollView");
		UIScrollView_MovementWrap.Register(L);
		L.RegFunction("OnDragNotification", UIScrollView_OnDragNotification);
		L.EndModule();
		L.BeginModule("UIWidget");
		UIWidget_PivotWrap.Register(L);
		L.RegFunction("OnDimensionsChanged", UIWidget_OnDimensionsChanged);
		L.RegFunction("OnPostFillCallback", UIWidget_OnPostFillCallback);
		L.RegFunction("HitCheck", UIWidget_HitCheck);
		L.EndModule();
		L.BeginModule("GameEnviroment");
		GameEnviroment_EEnviromentWrap.Register(L);
		L.EndModule();
		L.BeginModule("ProtoMsg");
		ProtoMsg_SEntryDataWrap.Register(L);
		ProtoMsg_SEntryBaseDataWrap.Register(L);
		ProtoMsg_SEntryHomeWrap.Register(L);
		ProtoMsg_PositionWrap.Register(L);
		ProtoMsg_SEntryMonsterWrap.Register(L);
		ProtoMsg_SEntryResourceWrap.Register(L);
		ProtoMsg_SEntryGuildBuildWrap.Register(L);
		ProtoMsg_SEntryEliteMonsterWrap.Register(L);
		ProtoMsg_OwnerGuildInfoWrap.Register(L);
		ProtoMsg_ActGuildMonsterInfoWrap.Register(L);
		ProtoMsg_MapGuildBlockWrap.Register(L);
		L.EndModule();
		L.EndModule();
		Debugger.Log("Register lua type cost time: {0}", Time.realtimeSinceStartup - t);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_UnityEngine_Vector3(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<UnityEngine.Vector3>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_UnityEngine_Vector3(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<UnityEngine.Vector3>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_UnityEngine_Vector3(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<UnityEngine.Vector3>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_EventDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<EventDelegate>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_EventDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<EventDelegate>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_EventDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<EventDelegate>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_UIAtlas(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<UIAtlas>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_UIAtlas(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<UIAtlas>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_UIAtlas(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<UIAtlas>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Func_System_Collections_Generic_Dictionary_string_string(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Func<System.Collections.Generic.Dictionary<string,string>>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_UnityEngine_Transform(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<UnityEngine.Transform>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_UnityEngine_GameObject(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<UnityEngine.GameObject>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_UnityEngine_GameObject(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<UnityEngine.GameObject>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_UnityEngine_GameObject(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<UnityEngine.GameObject>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_UnityEngine_Transform(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<UnityEngine.Transform>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_UnityEngine_Transform(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<UnityEngine.Transform>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_Serclimax_Battle_ScBattleDropMsg_DropItem(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<Serclimax.Battle.ScBattleDropMsg.DropItem>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_Serclimax_Battle_ScBattleDropMsg_DropItem(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<Serclimax.Battle.ScBattleDropMsg.DropItem>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_Serclimax_Battle_ScBattleDropMsg_DropItem(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<Serclimax.Battle.ScBattleDropMsg.DropItem>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<Serclimax.Player.ScPlayerInfoMsg.ArmyInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<Serclimax.Player.ScPlayerInfoMsg.ArmyInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_Serclimax_Player_ScPlayerInfoMsg_ArmyInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<Serclimax.Player.ScPlayerInfoMsg.ArmyInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_Serclimax_Player_ScPlayerInfoMsg_SkillInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<Serclimax.Player.ScPlayerInfoMsg.SkillInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_Serclimax_Player_ScPlayerInfoMsg_SkillInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<Serclimax.Player.ScPlayerInfoMsg.SkillInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_Serclimax_Player_ScPlayerInfoMsg_SkillInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<Serclimax.Player.ScPlayerInfoMsg.SkillInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_Serclimax_Player_ScCastSkillMsg_SkillUpdateInfo(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_bytes(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<byte[]>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_bytes(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<byte[]>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_bytes(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<byte[]>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_long_uint(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<long,uint>), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameStateLogin_OnSDKBind(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameStateLogin.OnSDKBind), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GameSetting_NoticeSaveOptionsCallBake(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GameSetting.NoticeSaveOptionsCallBake), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_GetKeyStateFunc(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.GetKeyStateFunc), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_GetAxisFunc(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.GetAxisFunc), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_GetAnyKeyFunc(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.GetAnyKeyFunc), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_OnScreenResize(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.OnScreenResize), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_OnCustomInput(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.OnCustomInput), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_OnSchemeChange(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.OnSchemeChange), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_VoidDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.VoidDelegate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_BoolDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.BoolDelegate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_FloatDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.FloatDelegate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_VectorDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.VectorDelegate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_ObjectDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.ObjectDelegate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_KeyCodeDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.KeyCodeDelegate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_MoveDelegate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.MoveDelegate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_GetTouchCountCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.GetTouchCountCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UICamera_GetTouchCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UICamera.GetTouchCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIScrollView_OnDragNotification(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIScrollView.OnDragNotification), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIWidget_OnDimensionsChanged(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIWidget.OnDimensionsChanged), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIWidget_OnPostFillCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIWidget.OnPostFillCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIWidget_HitCheck(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIWidget.HitCheck), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

