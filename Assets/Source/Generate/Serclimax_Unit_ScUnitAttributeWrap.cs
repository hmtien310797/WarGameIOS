//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Unit_ScUnitAttributeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Unit.ScUnitAttribute), typeof(System.Object));
		L.RegFunction("ImmediatelySync", ImmediatelySync);
		L.RegFunction("OnEventAction", OnEventAction);
		L.RegFunction("EventActionOver", EventActionOver);
		L.RegFunction("UpdateEventAction", UpdateEventAction);
		L.RegFunction("UpdateUnit_EnemyTarget", UpdateUnit_EnemyTarget);
		L.RegFunction("AddBuffAffectAtt", AddBuffAffectAtt);
		L.RegFunction("GetBuffAffectAtt", GetBuffAffectAtt);
		L.RegFunction("AllotBuffAffectAtt", AllotBuffAffectAtt);
		L.RegFunction("RecycleBuffAffectAtt", RecycleBuffAffectAtt);
		L.RegFunction("AddBuff", AddBuff);
		L.RegFunction("ClearAllBuff", ClearAllBuff);
		L.RegFunction("ClearBuff", ClearBuff);
		L.RegFunction("Dead", Dead);
		L.RegFunction("Revive", Revive);
		L.RegFunction("SetHp", SetHp);
		L.RegFunction("Hurt", Hurt);
		L.RegFunction("UpdateLiving", UpdateLiving);
		L.RegFunction("Active", Active);
		L.RegFunction("Inavtice", Inavtice);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("AnimStateToIdle", AnimStateToIdle);
		L.RegFunction("Update", Update);
		L.RegFunction("UpdateUnitAttribute", UpdateUnitAttribute);
		L.RegFunction("CollectMsg", CollectMsg);
		L.RegFunction("UpdateUID", UpdateUID);
		L.RegFunction("UpdateHitinfoMsg", UpdateHitinfoMsg);
		L.RegFunction("SetHitMode", SetHitMode);
		L.RegFunction("UpdateSkillLuanch", UpdateSkillLuanch);
		L.RegFunction("ResetMsg", ResetMsg);
		L.RegFunction("GetAttType", GetAttType);
		L.RegFunction("GetAttackWeight", GetAttackWeight);
		L.RegFunction("GetNearestCollider", GetNearestCollider);
		L.RegFunction("LockSpace", LockSpace);
		L.RegFunction("UnlockSpace", UnlockSpace);
		L.RegFunction("GetBaseCollider", GetBaseCollider);
		L.RegFunction("RegisterQuadSpace", RegisterQuadSpace);
		L.RegFunction("UpdateQuadSpace", UpdateQuadSpace);
		L.RegFunction("_ResetPointFileTargetState", _ResetPointFileTargetState);
		L.RegFunction("FiltUnit4Barrier", FiltUnit4Barrier);
		L.RegFunction("FiltUnit4Barriers", FiltUnit4Barriers);
		L.RegFunction("New", _CreateSerclimax_Unit_ScUnitAttribute);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("AnimState", get_AnimState, set_AnimState);
		L.RegVar("SearchEnemyCount", get_SearchEnemyCount, set_SearchEnemyCount);
		L.RegVar("EnemyTarget", get_EnemyTarget, set_EnemyTarget);
		L.RegVar("DodgeProbability", get_DodgeProbability, set_DodgeProbability);
		L.RegVar("CriticalProbability", get_CriticalProbability, set_CriticalProbability);
		L.RegVar("TeamID", get_TeamID, null);
		L.RegVar("MBornState", get_MBornState, set_MBornState);
		L.RegVar("NeedSearchEnemy", get_NeedSearchEnemy, set_NeedSearchEnemy);
		L.RegVar("HadNearbyEnemy", get_HadNearbyEnemy, set_HadNearbyEnemy);
		L.RegVar("isBornState", get_isBornState, null);
		L.RegVar("SkillOperators", get_SkillOperators, null);
		L.RegVar("BuffPointFireState", get_BuffPointFireState, null);
		L.RegVar("BuffVision", get_BuffVision, null);
		L.RegVar("BuffAttackRadiuss", get_BuffAttackRadiuss, null);
		L.RegVar("BaitState", get_BaitState, null);
		L.RegVar("MoveSpeedDamp", get_MoveSpeedDamp, null);
		L.RegVar("AdditionAttackPercent", get_AdditionAttackPercent, null);
		L.RegVar("TeamState", get_TeamState, null);
		L.RegVar("EnableAttackState", get_EnableAttackState, null);
		L.RegVar("LandingState", get_LandingState, null);
		L.RegVar("ActiveAIState", get_ActiveAIState, null);
		L.RegVar("IgnoreHurtState", get_IgnoreHurtState, null);
		L.RegVar("InFrieState", get_InFrieState, null);
		L.RegVar("Logic", get_Logic, null);
		L.RegVar("IsDead", get_IsDead, null);
		L.RegVar("HP", get_HP, null);
		L.RegVar("MaxHp", get_MaxHp, null);
		L.RegVar("IsGood", get_IsGood, null);
		L.RegVar("IgnoreHurt", get_IgnoreHurt, set_IgnoreHurt);
		L.RegVar("Collider", get_Collider, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Unit_ScUnitAttribute(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
				Serclimax.Unit.UnitParam arg1 = (Serclimax.Unit.UnitParam)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.UnitParam));
				Serclimax.Unit.ScUnitAttribute obj = new Serclimax.Unit.ScUnitAttribute(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Unit.ScUnitAttribute.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ImmediatelySync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.ImmediatelySync();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEventAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.OnEventAction(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EventActionOver(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.EventActionOver();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateEventAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateEventAction(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateUnit_EnemyTarget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateUnit_EnemyTarget(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddBuffAffectAtt(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitAttribute), typeof(int), typeof(bool), typeof(System.Action)))
			{
				Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				System.Action arg2 = null;
				LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

				if (funcType4 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (System.Action)ToLua.ToObject(L, 4);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 4);
					arg2 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
				}

				Serclimax.Skill.ScBuffAffectAttribute o = obj.AddBuffAffectAtt(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitAttribute), typeof(int), typeof(string), typeof(System.Action)))
			{
				Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				System.Action arg2 = null;
				LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

				if (funcType4 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (System.Action)ToLua.ToObject(L, 4);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 4);
					arg2 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
				}

				Serclimax.Skill.ScBuffAffectAttribute o = obj.AddBuffAffectAtt(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitAttribute), typeof(int), typeof(int), typeof(System.Action)))
			{
				Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				System.Action arg2 = null;
				LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

				if (funcType4 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (System.Action)ToLua.ToObject(L, 4);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 4);
					arg2 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
				}

				Serclimax.Skill.ScBuffAffectAttribute o = obj.AddBuffAffectAtt(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitAttribute), typeof(int), typeof(float), typeof(System.Action)))
			{
				Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				System.Action arg2 = null;
				LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

				if (funcType4 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (System.Action)ToLua.ToObject(L, 4);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 4);
					arg2 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
				}

				Serclimax.Skill.ScBuffAffectAttribute o = obj.AddBuffAffectAtt(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Serclimax.Unit.ScUnitAttribute.AddBuffAffectAtt");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBuffAffectAtt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Skill.ScBuffAffectAttribute o = obj.GetBuffAffectAtt(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AllotBuffAffectAtt(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitAttribute), typeof(Serclimax.Skill.ScBuffAffectAttribute)))
			{
				Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.ToObject(L, 1);
				Serclimax.Skill.ScBuffAffectAttribute arg0 = (Serclimax.Skill.ScBuffAffectAttribute)ToLua.ToObject(L, 2);
				Serclimax.Skill.ScBuffAffectAttribute o = obj.AllotBuffAffectAtt(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnitAttribute), typeof(int)))
			{
				Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				Serclimax.Skill.ScBuffAffectAttribute o = obj.AllotBuffAffectAtt(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Serclimax.Unit.ScUnitAttribute.AllotBuffAffectAtt");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RecycleBuffAffectAtt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Serclimax.Skill.ScBuffAffectAttribute arg0 = (Serclimax.Skill.ScBuffAffectAttribute)ToLua.CheckObject(L, 2, typeof(Serclimax.Skill.ScBuffAffectAttribute));
			obj.RecycleBuffAffectAtt(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddBuff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Serclimax.Skill.ScSkillBuffData arg0 = (Serclimax.Skill.ScSkillBuffData)ToLua.CheckObject(L, 2, typeof(Serclimax.Skill.ScSkillBuffData));
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			int arg5 = (int)LuaDLL.luaL_checknumber(L, 7);
			bool o = obj.AddBuff(arg0, arg1, arg2, arg3, arg4, arg5);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAllBuff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.ClearAllBuff();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearBuff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ClearBuff(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dead(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.Dead();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Revive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.Revive();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetHp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Fixedpoint.fInt arg0 = (Fixedpoint.fInt)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fInt));
			obj.SetHp(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hurt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Fixedpoint.fInt arg0 = (Fixedpoint.fInt)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fInt));
			obj.Hurt(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateLiving(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.UpdateLiving(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Active(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.Active();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Inavtice(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.Inavtice();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AnimStateToIdle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Serclimax.Unit.ScUnitAnimState arg0 = (Serclimax.Unit.ScUnitAnimState)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitAnimState));
			obj.AnimStateToIdle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.Update(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateUnitAttribute(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.UpdateUnitAttribute(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CollectMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.CollectMsg();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateUID(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateHitinfoMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit));
			Serclimax.QuadSpace.ScHitInfo arg1 = (Serclimax.QuadSpace.ScHitInfo)ToLua.CheckObject(L, 3, typeof(Serclimax.QuadSpace.ScHitInfo));
			obj.UpdateHitinfoMsg(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetHitMode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetHitMode(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateSkillLuanch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateSkillLuanch(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.ResetMsg();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAttType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			int o = obj.GetAttType();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAttackWeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			int o = obj.GetAttackWeight();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNearestCollider(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Fixedpoint.fVector3 arg0 = (Fixedpoint.fVector3)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fVector3));
			Serclimax.QuadSpace.ScCollider o = obj.GetNearestCollider(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LockSpace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.LockSpace();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnlockSpace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.UnlockSpace();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBaseCollider(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			Serclimax.QuadSpace.ScCollider o = obj.GetBaseCollider();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterQuadSpace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.RegisterQuadSpace();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateQuadSpace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.UpdateQuadSpace();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _ResetPointFileTargetState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			obj._ResetPointFileTargetState();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FiltUnit4Barrier(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			System.Collections.Generic.List<Serclimax.QuadSpace.ScCollider> arg0 = (System.Collections.Generic.List<Serclimax.QuadSpace.ScCollider>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.QuadSpace.ScCollider>));
			Serclimax.Unit.ScUnit o = obj.FiltUnit4Barrier(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FiltUnit4Barriers(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitAttribute));
			System.Collections.Generic.List<Serclimax.Unit.ScUnit> arg0 = (System.Collections.Generic.List<Serclimax.Unit.ScUnit>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.Unit.ScUnit>));
			System.Collections.Generic.List<Serclimax.QuadSpace.ScCollider> arg1 = (System.Collections.Generic.List<Serclimax.QuadSpace.ScCollider>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<Serclimax.QuadSpace.ScCollider>));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.FiltUnit4Barriers(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AnimState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			int ret = obj.AnimState;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AnimState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SearchEnemyCount(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Unit.ScUnitAttribute.SearchEnemyCount);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EnemyTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Unit.ScUnit ret = obj.EnemyTarget;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnemyTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DodgeProbability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Fixedpoint.fInt ret = obj.DodgeProbability;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DodgeProbability on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CriticalProbability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Fixedpoint.fInt ret = obj.CriticalProbability;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CriticalProbability on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TeamID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			int ret = obj.TeamID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TeamID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MBornState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Unit.ScUnitAnimState ret = obj.MBornState;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MBornState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NeedSearchEnemy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool ret = obj.NeedSearchEnemy;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index NeedSearchEnemy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HadNearbyEnemy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool ret = obj.HadNearbyEnemy;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HadNearbyEnemy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isBornState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool ret = obj.isBornState;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isBornState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SkillOperators(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			System.Collections.Generic.List<Serclimax.Skill.IScSkillOperator> ret = obj.SkillOperators;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SkillOperators on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuffPointFireState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.BuffPointFireState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BuffPointFireState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuffVision(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.BuffVision;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BuffVision on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuffAttackRadiuss(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			System.Collections.Generic.List<Serclimax.Skill.ScBuffAffectAttribute> ret = obj.BuffAttackRadiuss;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BuffAttackRadiuss on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BaitState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.BaitState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BaitState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MoveSpeedDamp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.MoveSpeedDamp;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MoveSpeedDamp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AdditionAttackPercent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.AdditionAttackPercent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AdditionAttackPercent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TeamState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.TeamState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TeamState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EnableAttackState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.EnableAttackState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnableAttackState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LandingState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.LandingState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LandingState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ActiveAIState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.ActiveAIState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ActiveAIState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreHurtState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.IgnoreHurtState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreHurtState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InFrieState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Skill.ScBuffAffectAttribute ret = obj.InFrieState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InFrieState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Logic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Unit.ScULogic ret = obj.Logic;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Logic on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsDead(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool ret = obj.IsDead;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsDead on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			float ret = obj.HP;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxHp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			float ret = obj.MaxHp;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxHp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsGood(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool ret = obj.IsGood;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsGood on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool ret = obj.IgnoreHurt;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreHurt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Collider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			System.Collections.Generic.List<Serclimax.QuadSpace.ScCollider> ret = obj.Collider;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Collider on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AnimState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.AnimState = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AnimState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SearchEnemyCount(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Unit.ScUnitAttribute.SearchEnemyCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EnemyTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit));
			obj.EnemyTarget = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnemyTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DodgeProbability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Fixedpoint.fInt arg0 = (Fixedpoint.fInt)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fInt));
			obj.DodgeProbability = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DodgeProbability on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CriticalProbability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Fixedpoint.fInt arg0 = (Fixedpoint.fInt)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fInt));
			obj.CriticalProbability = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CriticalProbability on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MBornState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			Serclimax.Unit.ScUnitAnimState arg0 = (Serclimax.Unit.ScUnitAnimState)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitAnimState));
			obj.MBornState = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MBornState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NeedSearchEnemy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.NeedSearchEnemy = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index NeedSearchEnemy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HadNearbyEnemy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.HadNearbyEnemy = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HadNearbyEnemy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IgnoreHurt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitAttribute obj = (Serclimax.Unit.ScUnitAttribute)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IgnoreHurt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IgnoreHurt on a nil value" : e.Message);
		}
	}
}

