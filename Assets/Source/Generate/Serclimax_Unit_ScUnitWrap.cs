//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Unit_ScUnitWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Unit.ScUnit), typeof(Serclimax.ScEntity));
		L.RegFunction("SetCurDir", SetCurDir);
		L.RegFunction("SetTargetDir", SetTargetDir);
		L.RegFunction("_isFriend", _isFriend);
		L.RegFunction("isEnemy", isEnemy);
		L.RegFunction("CanntBeAttacked", CanntBeAttacked);
		L.RegFunction("isFriend", isFriend);
		L.RegFunction("Active", Active);
		L.RegFunction("Inavtice", Inavtice);
		L.RegFunction("RefreshMsg", RefreshMsg);
		L.RegFunction("isDestroy", isDestroy);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("InitUnit", InitUnit);
		L.RegFunction("InitBuild", InitBuild);
		L.RegFunction("InitEntity", InitEntity);
		L.RegFunction("Update", Update);
		L.RegFunction("UpdateUID", UpdateUID);
		L.RegFunction("OnHit", OnHit);
		L.RegFunction("New", _CreateSerclimax_Unit_ScUnit);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("DontBeAttackedTeamTag", get_DontBeAttackedTeamTag, null);
		L.RegVar("CommonEnemyTeamTag", get_CommonEnemyTeamTag, null);
		L.RegVar("Tag", get_Tag, set_Tag);
		L.RegVar("RefCmd", get_RefCmd, set_RefCmd);
		L.RegVar("isGuideTarget", get_isGuideTarget, set_isGuideTarget);
		L.RegVar("BaitTarget", get_BaitTarget, set_BaitTarget);
		L.RegVar("usePopulation", get_usePopulation, set_usePopulation);
		L.RegVar("unitPopulationCount", get_unitPopulationCount, set_unitPopulationCount);
		L.RegVar("unitCreateFire", get_unitCreateFire, set_unitCreateFire);
		L.RegConstant("MinCarrierType", 100);
		L.RegConstant("MaxCarrierType", 199);
		L.RegVar("ForceMovePoint", get_ForceMovePoint, set_ForceMovePoint);
		L.RegVar("UnitAttribute", get_UnitAttribute, set_UnitAttribute);
		L.RegVar("OnHitHandle", get_OnHitHandle, set_OnHitHandle);
		L.RegVar("CurPos", get_CurPos, set_CurPos);
		L.RegVar("_InheritDamage", get__InheritDamage, set__InheritDamage);
		L.RegVar("CurDir", get_CurDir, null);
		L.RegVar("CurLeftDir", get_CurLeftDir, null);
		L.RegVar("TargetDir", get_TargetDir, null);
		L.RegVar("TargetLeftDir", get_TargetLeftDir, null);
		L.RegVar("UnitType", get_UnitType, null);
		L.RegVar("CurPosV3", get_CurPosV3, null);
		L.RegVar("IsDestroy", get_IsDestroy, null);
		L.RegVar("UnitMgr", get_UnitMgr, null);
		L.RegVar("Data", get_Data, null);
		L.RegVar("uTeamId", get_uTeamId, null);
		L.RegVar("BuildAttribulte", get_BuildAttribulte, null);
		L.RegVar("SoldierAttribute", get_SoldierAttribute, null);
		L.RegFunction("OnHitCallBack", Serclimax_Unit_ScUnit_OnHitCallBack);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Unit_ScUnit(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Unit.ScUnit obj = new Serclimax.Unit.ScUnit();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Unit.ScUnit.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCurDir(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			Fixedpoint.fVector3 arg0 = (Fixedpoint.fVector3)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fVector3));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetCurDir(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetTargetDir(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			Fixedpoint.fVector3 arg0 = (Fixedpoint.fVector3)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fVector3));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetTargetDir(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _isFriend(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = Serclimax.Unit.ScUnit._isFriend(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isEnemy(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnit), typeof(int)))
			{
				Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				bool o = obj.isEnemy(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnit), typeof(Serclimax.Unit.ScUnit)))
			{
				Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.ToObject(L, 1);
				Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.ToObject(L, 2);
				bool o = obj.isEnemy(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Serclimax.Unit.ScUnit.isEnemy");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CanntBeAttacked(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			bool o = obj.CanntBeAttacked();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isFriend(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnit), typeof(int)))
			{
				Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				bool o = obj.isFriend(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Serclimax.Unit.ScUnit), typeof(Serclimax.QuadSpace.ScCollider)))
			{
				Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.ToObject(L, 1);
				Serclimax.QuadSpace.ScCollider arg0 = (Serclimax.QuadSpace.ScCollider)ToLua.ToObject(L, 2);
				bool o = obj.isFriend(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Serclimax.Unit.ScUnit.isFriend");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Active(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			obj.Active();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Inavtice(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			obj.Inavtice();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			obj.RefreshMsg();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			bool o = obj.isDestroy();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitUnit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Unit.ScUnitData arg1 = (Serclimax.Unit.ScUnitData)ToLua.CheckObject(L, 3, typeof(Serclimax.Unit.ScUnitData));
			Serclimax.Unit.ScUnitMgr arg2 = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 4, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.Unit.UnitParam arg3 = (Serclimax.Unit.UnitParam)ToLua.CheckObject(L, 5, typeof(Serclimax.Unit.UnitParam));
			obj.InitUnit(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitBuild(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Unit.ScUnitDefenseData arg1 = (Serclimax.Unit.ScUnitDefenseData)ToLua.CheckObject(L, 3, typeof(Serclimax.Unit.ScUnitDefenseData));
			Serclimax.Unit.ScUnitMgr arg2 = (Serclimax.Unit.ScUnitMgr)ToLua.CheckObject(L, 4, typeof(Serclimax.Unit.ScUnitMgr));
			Serclimax.Unit.UnitParam arg3 = (Serclimax.Unit.UnitParam)ToLua.CheckObject(L, 5, typeof(Serclimax.Unit.UnitParam));
			obj.InitBuild(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.IScEntityData arg1 = (Serclimax.IScEntityData)ToLua.CheckObject(L, 3, typeof(Serclimax.IScEntityData));
			Serclimax.IScEntityMgr arg2 = (Serclimax.IScEntityMgr)ToLua.CheckObject(L, 4, typeof(Serclimax.IScEntityMgr));
			object[] arg3 = ToLua.ToParamsObject(L, 5, count - 4);
			obj.InitEntity(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateUID(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnHit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnit));
			Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit));
			Serclimax.QuadSpace.ScHitInfo arg1 = (Serclimax.QuadSpace.ScHitInfo)ToLua.CheckObject(L, 3, typeof(Serclimax.QuadSpace.ScHitInfo));
			obj.OnHit(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DontBeAttackedTeamTag(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Unit.ScUnit.DontBeAttackedTeamTag);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CommonEnemyTeamTag(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Unit.ScUnit.CommonEnemyTeamTag);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Tag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			string ret = obj.Tag;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Tag on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RefCmd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScCreateUnitMsg.Command ret = obj.RefCmd;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RefCmd on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isGuideTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			bool ret = obj.isGuideTarget;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isGuideTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BaitTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnit ret = obj.BaitTarget;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BaitTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_usePopulation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			bool ret = obj.usePopulation;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index usePopulation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unitPopulationCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			int ret = obj.unitPopulationCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unitPopulationCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_unitCreateFire(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			bool ret = obj.unitCreateFire;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unitCreateFire on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ForceMovePoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 ret = obj.ForceMovePoint;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ForceMovePoint on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitAttribute(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnitAttribute ret = obj.UnitAttribute;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitAttribute on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnHitHandle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnit.OnHitCallBack ret = obj.OnHitHandle;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OnHitHandle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 ret = obj.CurPos;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CurPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__InheritDamage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			float ret = obj._InheritDamage;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _InheritDamage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurDir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 ret = obj.CurDir;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CurDir on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurLeftDir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 ret = obj.CurLeftDir;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CurLeftDir on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TargetDir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 ret = obj.TargetDir;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TargetDir on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TargetLeftDir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 ret = obj.TargetLeftDir;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TargetLeftDir on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnitType ret = obj.UnitType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurPosV3(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			UnityEngine.Vector3 ret = obj.CurPosV3;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CurPosV3 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsDestroy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			bool ret = obj.IsDestroy;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsDestroy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnitMgr ret = obj.UnitMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.IScEntityData ret = obj.Data;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Data on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uTeamId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			int ret = obj.uTeamId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index uTeamId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuildAttribulte(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScBulidAttribute ret = obj.BuildAttribulte;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BuildAttribulte on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SoldierAttribute(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScSoldierAttribute ret = obj.SoldierAttribute;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SoldierAttribute on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Tag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Tag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Tag on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RefCmd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScCreateUnitMsg.Command arg0 = (Serclimax.Unit.ScCreateUnitMsg.Command)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScCreateUnitMsg.Command));
			obj.RefCmd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RefCmd on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isGuideTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isGuideTarget = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isGuideTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BaitTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnit arg0 = (Serclimax.Unit.ScUnit)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit));
			obj.BaitTarget = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BaitTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_usePopulation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.usePopulation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index usePopulation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unitPopulationCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.unitPopulationCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unitPopulationCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_unitCreateFire(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.unitCreateFire = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index unitCreateFire on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ForceMovePoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 arg0 = (Fixedpoint.fVector3)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fVector3));
			obj.ForceMovePoint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ForceMovePoint on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitAttribute(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnitAttribute arg0 = (Serclimax.Unit.ScUnitAttribute)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitAttribute));
			obj.UnitAttribute = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitAttribute on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnHitHandle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Serclimax.Unit.ScUnit.OnHitCallBack arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (Serclimax.Unit.ScUnit.OnHitCallBack)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnit.OnHitCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnit.OnHitCallBack), func) as Serclimax.Unit.ScUnit.OnHitCallBack;
			}

			obj.OnHitHandle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OnHitHandle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CurPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			Fixedpoint.fVector3 arg0 = (Fixedpoint.fVector3)ToLua.CheckObject(L, 2, typeof(Fixedpoint.fVector3));
			obj.CurPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CurPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__InheritDamage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnit obj = (Serclimax.Unit.ScUnit)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj._InheritDamage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _InheritDamage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serclimax_Unit_ScUnit_OnHitCallBack(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(Serclimax.Unit.ScUnit.OnHitCallBack), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

