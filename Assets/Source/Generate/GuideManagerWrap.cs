//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GuideManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GuideManager), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("StartGuide", StartGuide);
		L.RegFunction("OnIngameUI", OnIngameUI);
		L.RegFunction("update", update);
		L.RegFunction("AddGuide", AddGuide);
		L.RegFunction("Clear", Clear);
		L.RegFunction("Finish", Finish);
		L.RegFunction("SaveGuideProcess", SaveGuideProcess);
		L.RegFunction("GuideProcess", GuideProcess);
		L.RegFunction("FinishPreBattle", FinishPreBattle);
		L.RegFunction("InPause", InPause);
		L.RegFunction("Resume", Resume);
		L.RegFunction("New", _CreateGuideManager);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("mGuideGroups", get_mGuideGroups, set_mGuideGroups);
		L.RegVar("mGuideIngameData", get_mGuideIngameData, set_mGuideIngameData);
		L.RegVar("mCurGroup", get_mCurGroup, set_mCurGroup);
		L.RegVar("mCurGuideStep", get_mCurGuideStep, set_mCurGuideStep);
		L.RegVar("mPlayTittle", get_mPlayTittle, set_mPlayTittle);
		L.RegVar("instance", get_instance, null);
		L.RegVar("GuideIngo", get_GuideIngo, null);
		L.RegVar("GuideIngameUiData", get_GuideIngameUiData, null);
		L.RegFunction("FinishCallbackFunc", GuideManager_FinishCallbackFunc);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGuideManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GuideManager obj = new GuideManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GuideManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			obj.Init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartGuide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			GuideManager.FinishCallbackFunc arg2 = null;
			LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

			if (funcType4 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (GuideManager.FinishCallbackFunc)ToLua.CheckObject(L, 4, typeof(GuideManager.FinishCallbackFunc));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 4);
				arg2 = DelegateFactory.CreateDelegate(typeof(GuideManager.FinishCallbackFunc), func) as GuideManager.FinishCallbackFunc;
			}

			obj.StartGuide(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnIngameUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.OnIngameUI(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.update(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddGuide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			Serclimax.GuideInfoData arg0 = (Serclimax.GuideInfoData)ToLua.CheckObject(L, 2, typeof(Serclimax.GuideInfoData));
			obj.AddGuide(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Finish(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			obj.Finish();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SaveGuideProcess(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			obj.SaveGuideProcess();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GuideProcess(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.GuideProcess(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FinishPreBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			obj.FinishPreBattle();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			obj.InPause();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Resume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GuideManager obj = (GuideManager)ToLua.CheckObject(L, 1, typeof(GuideManager));
			obj.Resume();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mGuideGroups(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			System.Collections.Generic.Dictionary<int,GuideGroup> ret = obj.mGuideGroups;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGuideGroups on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mGuideIngameData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			System.Collections.Generic.List<Serclimax.GuideIngameUiData> ret = obj.mGuideIngameData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGuideIngameData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCurGroup(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			GuideGroup ret = obj.mCurGroup;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCurGroup on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCurGuideStep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			GuideStepBase ret = obj.mCurGuideStep;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCurGuideStep on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mPlayTittle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			bool ret = obj.mPlayTittle;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayTittle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GuideManager.instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GuideIngo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			Serclimax.ScTableData<Serclimax.GuideInfoData> ret = obj.GuideIngo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GuideIngo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GuideIngameUiData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			Serclimax.ScTableData<Serclimax.GuideIngameUiData> ret = obj.GuideIngameUiData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GuideIngameUiData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mGuideGroups(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			System.Collections.Generic.Dictionary<int,GuideGroup> arg0 = (System.Collections.Generic.Dictionary<int,GuideGroup>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,GuideGroup>));
			obj.mGuideGroups = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGuideGroups on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mGuideIngameData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			System.Collections.Generic.List<Serclimax.GuideIngameUiData> arg0 = (System.Collections.Generic.List<Serclimax.GuideIngameUiData>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.GuideIngameUiData>));
			obj.mGuideIngameData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGuideIngameData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCurGroup(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			GuideGroup arg0 = (GuideGroup)ToLua.CheckObject(L, 2, typeof(GuideGroup));
			obj.mCurGroup = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCurGroup on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCurGuideStep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			GuideStepBase arg0 = (GuideStepBase)ToLua.CheckObject(L, 2, typeof(GuideStepBase));
			obj.mCurGuideStep = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCurGuideStep on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mPlayTittle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GuideManager obj = (GuideManager)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.mPlayTittle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayTittle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GuideManager_FinishCallbackFunc(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GuideManager.FinishCallbackFunc), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

