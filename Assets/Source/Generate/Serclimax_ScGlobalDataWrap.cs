//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_ScGlobalDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.ScGlobalData), typeof(Serclimax.ScData));
		L.RegFunction("FillAIForAIer", FillAIForAIer);
		L.RegFunction("New", _CreateSerclimax_ScGlobalData);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("value", get_value, set_value);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_ScGlobalData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.ScGlobalData obj = new Serclimax.ScGlobalData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.ScGlobalData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FillAIForAIer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			Serclimax.ScGlobalData obj = (Serclimax.ScGlobalData)ToLua.CheckObject(L, 1, typeof(Serclimax.ScGlobalData));
			Serclimax.ScAIer arg0 = (Serclimax.ScAIer)ToLua.CheckObject(L, 2, typeof(Serclimax.ScAIer));
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.FillAIForAIer(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_value(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScGlobalData obj = (Serclimax.ScGlobalData)o;
			string ret = obj.value;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index value on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_value(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.ScGlobalData obj = (Serclimax.ScGlobalData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.value = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index value on a nil value" : e.Message);
		}
	}
}

