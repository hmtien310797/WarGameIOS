//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_ConstantsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Constants), typeof(System.Object));
		L.RegFunction("New", _CreateSerclimax_Constants);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("ENABLE_FAKE_DATA", get_ENABLE_FAKE_DATA, set_ENABLE_FAKE_DATA);
		L.RegVar("ENABLE_CHEAT", get_ENABLE_CHEAT, set_ENABLE_CHEAT);
		L.RegVar("Frame_Limitation", get_Frame_Limitation, set_Frame_Limitation);
		L.RegVar("LOG_ENABLE", get_LOG_ENABLE, set_LOG_ENABLE);
		L.RegVar("LOG_NETWORK_ENABLE", get_LOG_NETWORK_ENABLE, set_LOG_NETWORK_ENABLE);
		L.RegVar("USE_LUA_BUNDLE", get_USE_LUA_BUNDLE, set_USE_LUA_BUNDLE);
		L.RegVar("SHOW_UNIT_HUD", get_SHOW_UNIT_HUD, set_SHOW_UNIT_HUD);
		L.RegVar("USE_LOCAL_LEVEL_DATA", get_USE_LOCAL_LEVEL_DATA, set_USE_LOCAL_LEVEL_DATA);
		L.RegVar("BATTLELINE_START_ID", get_BATTLELINE_START_ID, set_BATTLELINE_START_ID);
		L.RegVar("BATTLELINE_END_ID", get_BATTLELINE_END_ID, set_BATTLELINE_END_ID);
		L.RegVar("BATTLELINE_INIT_ID", get_BATTLELINE_INIT_ID, set_BATTLELINE_INIT_ID);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Constants(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Constants obj = new Serclimax.Constants();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Constants.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ENABLE_FAKE_DATA(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Serclimax.Constants.ENABLE_FAKE_DATA);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ENABLE_CHEAT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Serclimax.Constants.ENABLE_CHEAT);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Frame_Limitation(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Constants.Frame_Limitation);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOG_ENABLE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Serclimax.Constants.LOG_ENABLE);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOG_NETWORK_ENABLE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Serclimax.Constants.LOG_NETWORK_ENABLE);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_USE_LUA_BUNDLE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Serclimax.Constants.USE_LUA_BUNDLE);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SHOW_UNIT_HUD(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Serclimax.Constants.SHOW_UNIT_HUD);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_USE_LOCAL_LEVEL_DATA(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Serclimax.Constants.USE_LOCAL_LEVEL_DATA);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BATTLELINE_START_ID(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Constants.BATTLELINE_START_ID);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BATTLELINE_END_ID(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Constants.BATTLELINE_END_ID);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BATTLELINE_INIT_ID(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Serclimax.Constants.BATTLELINE_INIT_ID);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ENABLE_FAKE_DATA(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Serclimax.Constants.ENABLE_FAKE_DATA = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ENABLE_CHEAT(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Serclimax.Constants.ENABLE_CHEAT = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Frame_Limitation(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Constants.Frame_Limitation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LOG_ENABLE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Serclimax.Constants.LOG_ENABLE = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LOG_NETWORK_ENABLE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Serclimax.Constants.LOG_NETWORK_ENABLE = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_USE_LUA_BUNDLE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Serclimax.Constants.USE_LUA_BUNDLE = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SHOW_UNIT_HUD(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Serclimax.Constants.SHOW_UNIT_HUD = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_USE_LOCAL_LEVEL_DATA(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Serclimax.Constants.USE_LOCAL_LEVEL_DATA = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BATTLELINE_START_ID(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Constants.BATTLELINE_START_ID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BATTLELINE_END_ID(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Constants.BATTLELINE_END_ID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BATTLELINE_INIT_ID(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Serclimax.Constants.BATTLELINE_INIT_ID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

