//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GUIMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GUIMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("PushUIPool", PushUIPool);
		L.RegFunction("AddActiveMenu", AddActiveMenu);
		L.RegFunction("RemoveActiveMenu", RemoveActiveMenu);
		L.RegFunction("GetActiveMenuList", GetActiveMenuList);
		L.RegFunction("ActiveMainCityUI", ActiveMainCityUI);
		L.RegFunction("IsInMainCityUI", IsInMainCityUI);
		L.RegFunction("ToggleLuaConsole", ToggleLuaConsole);
		L.RegFunction("ShowReporter", ShowReporter);
		L.RegFunction("ReloadUI", ReloadUI);
		L.RegFunction("LockScreen", LockScreen);
		L.RegFunction("UnlockScreen", UnlockScreen);
		L.RegFunction("CacheUIPrefab", CacheUIPrefab);
		L.RegFunction("InitMenuList", InitMenuList);
		L.RegFunction("NormalizeChildrenPanelDepths", NormalizeChildrenPanelDepths);
		L.RegFunction("NormalizeChildrenWidgetDepths", NormalizeChildrenWidgetDepths);
		L.RegFunction("BringForward", BringForward);
		L.RegFunction("CreateMenu", CreateMenu);
		L.RegFunction("FindMenu", FindMenu);
		L.RegFunction("__Internal_RemoveMenu", __Internal_RemoveMenu);
		L.RegFunction("CloseMenu", CloseMenu);
		L.RegFunction("CloseAllMenu", CloseAllMenu);
		L.RegFunction("MessageBox", MessageBox);
		L.RegFunction("FloatText", FloatText);
		L.RegFunction("UIWorldToGameWorld", UIWorldToGameWorld);
		L.RegFunction("GetTopMenuOnRoot", GetTopMenuOnRoot);
		L.RegFunction("GetTopNotTutorialMenuOnRoot", GetTopNotTutorialMenuOnRoot);
		L.RegFunction("IsMainCityUIOpen", IsMainCityUIOpen);
		L.RegFunction("IsMenuOpen", IsMenuOpen);
		L.RegFunction("IsTopMenuOpen", IsTopMenuOpen);
		L.RegFunction("GetDeviceName", GetDeviceName);
		L.RegFunction("GetSystemInfo", GetSystemInfo);
		L.RegFunction("SubmitRoleInfo", SubmitRoleInfo);
		L.RegFunction("Recharge", Recharge);
		L.RegFunction("RechargeSucc", RechargeSucc);
		L.RegFunction("SendMessageToSocial", SendMessageToSocial);
		L.RegFunction("GetInventoryList", GetInventoryList);
		L.RegFunction("GetPlatformType", GetPlatformType);
		L.RegFunction("MakeTokenBroken", MakeTokenBroken);
		L.RegFunction("SendDataReport", SendDataReport);
		L.RegFunction("EnableDestroyEffect", EnableDestroyEffect);
		L.RegFunction("StringFomat", StringFomat);
		L.RegFunction("TriggerOnMenuOpen", TriggerOnMenuOpen);
		L.RegFunction("SetLanguage", SetLanguage);
		L.RegFunction("GetSystemLanguage", GetSystemLanguage);
		L.RegFunction("GS", GS);
		L.RegFunction("MD5_Encrypt", MD5_Encrypt);
		L.RegFunction("GetResourceSettingPath", GetResourceSettingPath);
		L.RegFunction("GetResourceUserPath", GetResourceUserPath);
		L.RegFunction("GetFileUserPath", GetFileUserPath);
		L.RegFunction("CreateDirectory", CreateDirectory);
		L.RegFunction("Exit", Exit);
		L.RegFunction("DeleteDirectory", DeleteDirectory);
		L.RegFunction("String2Base", String2Base);
		L.RegFunction("Base2String", Base2String);
		L.RegFunction("GC", GC);
		L.RegFunction("HttpRequest", HttpRequest);
		L.RegFunction("POST", POST);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("onMenuCreate", get_onMenuCreate, set_onMenuCreate);
		L.RegVar("onMenuOpen", get_onMenuOpen, set_onMenuOpen);
		L.RegVar("onMenuClose", get_onMenuClose, set_onMenuClose);
		L.RegVar("onTutorialTriggered", get_onTutorialTriggered, set_onTutorialTriggered);
		L.RegVar("onSocialCallback", get_onSocialCallback, set_onSocialCallback);
		L.RegVar("onCheckChatMsgCallback", get_onCheckChatMsgCallback, set_onCheckChatMsgCallback);
		L.RegVar("kickOff", get_kickOff, set_kickOff);
		L.RegVar("targetLanguage", get_targetLanguage, set_targetLanguage);
		L.RegVar("PostEffect", get_PostEffect, set_PostEffect);
		L.RegVar("UIRoot", get_UIRoot, null);
		L.RegVar("UITopRoot", get_UITopRoot, null);
		L.RegVar("Instance", get_Instance, null);
		L.RegFunction("OnCheckChatMsgCallback", GUIMgr_OnCheckChatMsgCallback);
		L.RegFunction("OnSocialCallback", GUIMgr_OnSocialCallback);
		L.RegFunction("OnTutorialTriggered", GUIMgr_OnTutorialTriggered);
		L.RegFunction("OnMenuClose", GUIMgr_OnMenuClose);
		L.RegFunction("OnMenuCreate", GUIMgr_OnMenuCreate);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushUIPool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.GameObject));
			bool o = obj.PushUIPool(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddActiveMenu(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.AddActiveMenu(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveActiveMenu(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveActiveMenu(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetActiveMenuList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.GetActiveMenuList();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ActiveMainCityUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.ActiveMainCityUI();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsInMainCityUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			bool o = obj.IsInMainCityUI();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToggleLuaConsole(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.ToggleLuaConsole();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowReporter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.ShowReporter();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReloadUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.ReloadUI(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LockScreen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.LockScreen();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnlockScreen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.UnlockScreen();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CacheUIPrefab(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.CacheUIPrefab(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitMenuList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.InitMenuList();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NormalizeChildrenPanelDepths(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Transform));
			GUIMgr.NormalizeChildrenPanelDepths(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NormalizeChildrenWidgetDepths(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Transform));
			GUIMgr.NormalizeChildrenWidgetDepths(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BringForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.BringForward(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateMenu(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			LuaBehaviour o = obj.CreateMenu(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindMenu(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			LuaBehaviour o = obj.FindMenu(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __Internal_RemoveMenu(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			LuaBehaviour arg0 = (LuaBehaviour)ToLua.CheckUnityObject(L, 2, typeof(LuaBehaviour));
			obj.__Internal_RemoveMenu(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseMenu(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(GUIMgr), typeof(string)))
			{
				GUIMgr obj = (GUIMgr)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.CloseMenu(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(GUIMgr), typeof(string), typeof(float)))
			{
				GUIMgr obj = (GUIMgr)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				obj.CloseMenu(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GUIMgr.CloseMenu");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseAllMenu(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.CloseAllMenu();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MessageBox(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			System.Action arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (System.Action)ToLua.CheckObject(L, 3, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			System.Action arg2 = null;
			LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

			if (funcType4 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (System.Action)ToLua.CheckObject(L, 4, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 4);
				arg2 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			string arg3 = ToLua.CheckString(L, 5);
			string arg4 = ToLua.CheckString(L, 6);
			obj.MessageBox(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FloatText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Color arg1 = ToLua.ToColor(L, 3);
			obj.FloatText(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIWorldToGameWorld(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			UnityEngine.Vector3 o = obj.UIWorldToGameWorld(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTopMenuOnRoot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			LuaBehaviour o = obj.GetTopMenuOnRoot();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTopNotTutorialMenuOnRoot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			LuaBehaviour o = obj.GetTopNotTutorialMenuOnRoot();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsMainCityUIOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			bool o = obj.IsMainCityUIOpen();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsMenuOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsMenuOpen(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsTopMenuOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsTopMenuOpen(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDeviceName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string o = obj.GetDeviceName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSystemInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string o = obj.GetSystemInfo();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SubmitRoleInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.SubmitRoleInfo(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Recharge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.Recharge(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RechargeSucc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.RechargeSucc();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMessageToSocial(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			string arg4 = ToLua.CheckString(L, 6);
			string arg5 = ToLua.CheckString(L, 7);
			obj.SendMessageToSocial(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInventoryList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.GetInventoryList(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlatformType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			int o = obj.GetPlatformType();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MakeTokenBroken(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.MakeTokenBroken();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendDataReport(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string[] arg0 = ToLua.CheckParamsString(L, 2, count - 1);
			obj.SendDataReport(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableDestroyEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.EnableDestroyEffect(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StringFomat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			object[] arg1 = ToLua.CheckObjectArray(L, 3);
			string o = obj.StringFomat(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TriggerOnMenuOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.TriggerOnMenuOpen(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLanguage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetLanguage(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSystemLanguage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			int o = obj.GetSystemLanguage();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GS(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.GS();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MD5_Encrypt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.MD5_Encrypt(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResourceSettingPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string o = obj.GetResourceSettingPath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResourceUserPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string o = obj.GetResourceUserPath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFileUserPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string o = obj.GetFileUserPath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateDirectory(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.CreateDirectory(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Exit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.Exit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteDirectory(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.DeleteDirectory(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int String2Base(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.String2Base(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Base2String(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.Base2String(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GC(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			obj.GC();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HttpRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.Dictionary<string,string> arg1 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.Dictionary<string,string>));
			string arg2 = ToLua.CheckString(L, 4);
			GUIMgr.OnCheckChatMsgCallback arg3 = null;
			LuaTypes funcType5 = LuaDLL.lua_type(L, 5);

			if (funcType5 != LuaTypes.LUA_TFUNCTION)
			{
				 arg3 = (GUIMgr.OnCheckChatMsgCallback)ToLua.CheckObject(L, 5, typeof(GUIMgr.OnCheckChatMsgCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 5);
				arg3 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnCheckChatMsgCallback), func) as GUIMgr.OnCheckChatMsgCallback;
			}

			obj.HttpRequest(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int POST(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			GUIMgr obj = (GUIMgr)ToLua.CheckObject(L, 1, typeof(GUIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.Dictionary<string,string> arg1 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.Dictionary<string,string>));
			string arg2 = ToLua.CheckString(L, 4);
			GUIMgr.OnCheckChatMsgCallback arg3 = null;
			LuaTypes funcType5 = LuaDLL.lua_type(L, 5);

			if (funcType5 != LuaTypes.LUA_TFUNCTION)
			{
				 arg3 = (GUIMgr.OnCheckChatMsgCallback)ToLua.CheckObject(L, 5, typeof(GUIMgr.OnCheckChatMsgCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 5);
				arg3 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnCheckChatMsgCallback), func) as GUIMgr.OnCheckChatMsgCallback;
			}

			System.Collections.IEnumerator o = obj.POST(arg0, arg1, arg2, arg3);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMenuCreate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnMenuCreate ret = obj.onMenuCreate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onMenuCreate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMenuOpen(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnMenuCreate ret = obj.onMenuOpen;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onMenuOpen on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMenuClose(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnMenuClose ret = obj.onMenuClose;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onMenuClose on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTutorialTriggered(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnTutorialTriggered ret = obj.onTutorialTriggered;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onTutorialTriggered on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onSocialCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnSocialCallback ret = obj.onSocialCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onSocialCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCheckChatMsgCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnCheckChatMsgCallback ret = obj.onCheckChatMsgCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onCheckChatMsgCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_kickOff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			bool ret = obj.kickOff;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index kickOff on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_targetLanguage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			string ret = obj.targetLanguage;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index targetLanguage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PostEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			Clishow.CsPostEffect ret = obj.PostEffect;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PostEffect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			UnityEngine.Transform ret = obj.UIRoot;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UIRoot on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UITopRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			UnityEngine.Transform ret = obj.UITopRoot;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UITopRoot on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GUIMgr.Instance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMenuCreate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnMenuCreate arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GUIMgr.OnMenuCreate)ToLua.CheckObject(L, 2, typeof(GUIMgr.OnMenuCreate));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnMenuCreate), func) as GUIMgr.OnMenuCreate;
			}

			obj.onMenuCreate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onMenuCreate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMenuOpen(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnMenuCreate arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GUIMgr.OnMenuCreate)ToLua.CheckObject(L, 2, typeof(GUIMgr.OnMenuCreate));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnMenuCreate), func) as GUIMgr.OnMenuCreate;
			}

			obj.onMenuOpen = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onMenuOpen on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMenuClose(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnMenuClose arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GUIMgr.OnMenuClose)ToLua.CheckObject(L, 2, typeof(GUIMgr.OnMenuClose));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnMenuClose), func) as GUIMgr.OnMenuClose;
			}

			obj.onMenuClose = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onMenuClose on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTutorialTriggered(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnTutorialTriggered arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GUIMgr.OnTutorialTriggered)ToLua.CheckObject(L, 2, typeof(GUIMgr.OnTutorialTriggered));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnTutorialTriggered), func) as GUIMgr.OnTutorialTriggered;
			}

			obj.onTutorialTriggered = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onTutorialTriggered on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onSocialCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnSocialCallback arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GUIMgr.OnSocialCallback)ToLua.CheckObject(L, 2, typeof(GUIMgr.OnSocialCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnSocialCallback), func) as GUIMgr.OnSocialCallback;
			}

			obj.onSocialCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onSocialCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCheckChatMsgCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			GUIMgr.OnCheckChatMsgCallback arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GUIMgr.OnCheckChatMsgCallback)ToLua.CheckObject(L, 2, typeof(GUIMgr.OnCheckChatMsgCallback));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnCheckChatMsgCallback), func) as GUIMgr.OnCheckChatMsgCallback;
			}

			obj.onCheckChatMsgCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onCheckChatMsgCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_kickOff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.kickOff = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index kickOff on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetLanguage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.targetLanguage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index targetLanguage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PostEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GUIMgr obj = (GUIMgr)o;
			Clishow.CsPostEffect arg0 = (Clishow.CsPostEffect)ToLua.CheckUnityObject(L, 2, typeof(Clishow.CsPostEffect));
			obj.PostEffect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PostEffect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GUIMgr_OnCheckChatMsgCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnCheckChatMsgCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GUIMgr_OnSocialCallback(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnSocialCallback), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GUIMgr_OnTutorialTriggered(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnTutorialTriggered), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GUIMgr_OnMenuClose(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnMenuClose), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GUIMgr_OnMenuCreate(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GUIMgr.OnMenuCreate), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

