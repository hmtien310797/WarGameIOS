//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Player_ScCastSkillMsgWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Player.ScCastSkillMsg), typeof(System.Object));
		L.RegFunction("EnableOverwirte", EnableOverwirte);
		L.RegFunction("GetDisposeType", GetDisposeType);
		L.RegFunction("GetEntityUID", GetEntityUID);
		L.RegFunction("SetEntityUID", SetEntityUID);
		L.RegFunction("New", _CreateSerclimax_Player_ScCastSkillMsg);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("castIndex", get_castIndex, set_castIndex);
		L.RegVar("currentEnergy", get_currentEnergy, set_currentEnergy);
		L.RegVar("updateInfoList", get_updateInfoList, set_updateInfoList);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Player_ScCastSkillMsg(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Player.ScCastSkillMsg obj = new Serclimax.Player.ScCastSkillMsg();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Player.ScCastSkillMsg.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableOverwirte(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Player.ScCastSkillMsg));
			bool o = obj.EnableOverwirte();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDisposeType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Player.ScCastSkillMsg));
			Serclimax.ScDefineDisMsgEnum o = obj.GetDisposeType();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEntityUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Player.ScCastSkillMsg));
			int o = obj.GetEntityUID();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetEntityUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)ToLua.CheckObject(L, 1, typeof(Serclimax.Player.ScCastSkillMsg));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetEntityUID(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_castIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)o;
			int ret = obj.castIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index castIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentEnergy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)o;
			int ret = obj.currentEnergy;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currentEnergy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updateInfoList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)o;
			System.Collections.Generic.List<Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo> ret = obj.updateInfoList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index updateInfoList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_castIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.castIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index castIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_currentEnergy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.currentEnergy = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currentEnergy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updateInfoList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Player.ScCastSkillMsg obj = (Serclimax.Player.ScCastSkillMsg)o;
			System.Collections.Generic.List<Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo> arg0 = (System.Collections.Generic.List<Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Serclimax.Player.ScCastSkillMsg.SkillUpdateInfo>));
			obj.updateInfoList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index updateInfoList on a nil value" : e.Message);
		}
	}
}

