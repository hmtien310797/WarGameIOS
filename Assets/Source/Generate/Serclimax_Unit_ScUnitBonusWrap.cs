//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Serclimax_Unit_ScUnitBonusWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Serclimax.Unit.ScUnitBonus), typeof(System.Object));
		L.RegFunction("Apply2UnitData", Apply2UnitData);
		L.RegFunction("Apply2WeaponData", Apply2WeaponData);
		L.RegFunction("ToProtoMsg", ToProtoMsg);
		L.RegFunction("New", _CreateSerclimax_Unit_ScUnitBonus);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("WeaponDamageBonus", get_WeaponDamageBonus, set_WeaponDamageBonus);
		L.RegVar("WeaponCDBonus", get_WeaponCDBonus, set_WeaponCDBonus);
		L.RegVar("WeaponAntiDefBonus", get_WeaponAntiDefBonus, set_WeaponAntiDefBonus);
		L.RegVar("WeaponReloadBonus", get_WeaponReloadBonus, set_WeaponReloadBonus);
		L.RegVar("WeaponRangeBonus", get_WeaponRangeBonus, set_WeaponRangeBonus);
		L.RegVar("WeaponMaxRangeBonus", get_WeaponMaxRangeBonus, set_WeaponMaxRangeBonus);
		L.RegVar("WeaponClipBonus", get_WeaponClipBonus, set_WeaponClipBonus);
		L.RegVar("UnitHPBonus", get_UnitHPBonus, set_UnitHPBonus);
		L.RegVar("UnitDefBonus", get_UnitDefBonus, set_UnitDefBonus);
		L.RegVar("UnitDodgeBonus", get_UnitDodgeBonus, set_UnitDodgeBonus);
		L.RegVar("UnitCriticalBonus", get_UnitCriticalBonus, set_UnitCriticalBonus);
		L.RegVar("UnitVisionBonus", get_UnitVisionBonus, set_UnitVisionBonus);
		L.RegVar("UnitSpeedBonus", get_UnitSpeedBonus, set_UnitSpeedBonus);
		L.RegVar("UnitGroupNeedBulletBonus", get_UnitGroupNeedBulletBonus, set_UnitGroupNeedBulletBonus);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSerclimax_Unit_ScUnitBonus(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Serclimax.Unit.ScUnitBonus obj = new Serclimax.Unit.ScUnitBonus();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Serclimax.Unit.ScUnitBonus.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply2UnitData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitBonus));
			Serclimax.Unit.ScUnitData arg0 = (Serclimax.Unit.ScUnitData)ToLua.CheckObject(L, 2, typeof(Serclimax.Unit.ScUnitData));
			Serclimax.Unit.ScUnitData o = obj.Apply2UnitData(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply2WeaponData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitBonus));
			Serclimax.Skill.ScSkillWeaponData arg0 = (Serclimax.Skill.ScSkillWeaponData)ToLua.CheckObject(L, 2, typeof(Serclimax.Skill.ScSkillWeaponData));
			Serclimax.Skill.ScSkillWeaponData o = obj.Apply2WeaponData(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToProtoMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)ToLua.CheckObject(L, 1, typeof(Serclimax.Unit.ScUnitBonus));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			ProtoMsg.PBUnitBonus o = obj.ToProtoMsg(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeaponDamageBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.WeaponDamageBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponDamageBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeaponCDBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.WeaponCDBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponCDBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeaponAntiDefBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.WeaponAntiDefBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponAntiDefBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeaponReloadBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.WeaponReloadBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponReloadBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeaponRangeBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.WeaponRangeBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponRangeBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeaponMaxRangeBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.WeaponMaxRangeBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponMaxRangeBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WeaponClipBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			int ret = obj.WeaponClipBonus;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponClipBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitHPBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.UnitHPBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitHPBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitDefBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.UnitDefBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitDefBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitDodgeBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.UnitDodgeBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitDodgeBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitCriticalBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.UnitCriticalBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitCriticalBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitVisionBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.UnitVisionBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitVisionBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitSpeedBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float ret = obj.UnitSpeedBonus;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitSpeedBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnitGroupNeedBulletBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			int ret = obj.UnitGroupNeedBulletBonus;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitGroupNeedBulletBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WeaponDamageBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.WeaponDamageBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponDamageBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WeaponCDBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.WeaponCDBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponCDBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WeaponAntiDefBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.WeaponAntiDefBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponAntiDefBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WeaponReloadBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.WeaponReloadBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponReloadBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WeaponRangeBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.WeaponRangeBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponRangeBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WeaponMaxRangeBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.WeaponMaxRangeBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponMaxRangeBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WeaponClipBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.WeaponClipBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WeaponClipBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitHPBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UnitHPBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitHPBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitDefBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UnitDefBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitDefBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitDodgeBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UnitDodgeBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitDodgeBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitCriticalBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UnitCriticalBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitCriticalBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitVisionBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UnitVisionBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitVisionBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitSpeedBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.UnitSpeedBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitSpeedBonus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UnitGroupNeedBulletBonus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Serclimax.Unit.ScUnitBonus obj = (Serclimax.Unit.ScUnitBonus)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.UnitGroupNeedBulletBonus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UnitGroupNeedBulletBonus on a nil value" : e.Message);
		}
	}
}

